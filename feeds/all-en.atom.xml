<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>LexToumbourou.com</title><link href="http://lextoumbourou.github.io/" rel="alternate"></link><link href="http://lextoumbourou.github.io/feeds/all-en.atom.xml" rel="self"></link><id>http://lextoumbourou.github.io/</id><updated>2016-05-08T00:00:00+10:00</updated><entry><title>Understanding recursive queries in PostgreSQL</title><link href="http://lextoumbourou.github.io/blog/posts/understanding-recursive-queries-in-postgresql/" rel="alternate"></link><updated>2016-05-08T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2016-05-08:blog/posts/understanding-recursive-queries-in-postgresql/</id><summary type="html">&lt;p&gt;For some data relationships in Postgres (or any other relational database that speaks SQL), recursive queries are near inevitable. Let's say you have some top-level product categories, like Shoes, Hats, Wigs etc, and each of those has subcategories, like Sports, Casual, Formal etc, which can have their own subcategories and so on. Something like this:&lt;/p&gt;
&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="299" version="1.1" content="%3CmxGraphModel%20dx%3D%22706%22%20dy%3D%22713%22%20grid%3D%221%22%20gridSize%3D%2210%22%20guides%3D%221%22%20tooltips%3D%221%22%20connect%3D%221%22%20arrows%3D%221%22%20fold%3D%221%22%20page%3D%221%22%20pageScale%3D%221%22%20pageWidth%3D%22826%22%20pageHeight%3D%221169%22%20background%3D%22%23ffffff%22%20math%3D%220%22%20shadow%3D%220%22%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Shoes%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23ffffff%3BstrokeColor%3D%23000000%3BlabelBackgroundColor%3D%23ffffff%3BfontStyle%3D1%3BfontSize%3D18%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22250%22%20y%3D%2249%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%223%22%20value%3D%22%26lt%3Bb%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2015px%26quot%3B%26gt%3BSports%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fb%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22250%22%20y%3D%22140%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%224%22%20value%3D%22Nike%20Air%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfontStyle%3D1%3BfontSize%3D13%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22160%22%20y%3D%22230%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%225%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3BentryX%3D0.5%3BentryY%3D1%3B%22%20parent%3D%221%22%20source%3D%224%22%20target%3D%223%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%226%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3B%22%20parent%3D%221%22%20source%3D%223%22%20target%3D%222%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%227%22%20value%3D%22Rebook%20Pump%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfontStyle%3D1%3BfontSize%3D13%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22330%22%20y%3D%22230%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%228%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3BentryX%3D0.558%3BentryY%3D1%3BentryPerimeter%3D0%3B%22%20parent%3D%221%22%20source%3D%227%22%20target%3D%223%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2210%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%201%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%22136%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2212%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22180%22%20y%3D%22230%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2213%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22350%22%20y%3D%22230%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2214%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%22180%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2215%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%203%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22180%22%20y%3D%22270%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2216%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%204%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22350%22%20y%3D%22270%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2217%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%201%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%2290%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2218%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%20NULL%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%2245%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E" ondblclick="(function(svg){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data=='ready'&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute('content')),'*');window.removeEventListener('message',r);}};window.addEventListener('message',r);svg.wnd=window.open('https://www.draw.io/?client=1&amp;amp;chrome=0&amp;amp;edit=_blank');}})(this);" viewBox="0 0 299 254" style="max-width:100%;max-height:254px;"&gt;&lt;defs&gt;&lt;filter id="dropShadow"&gt;&lt;feGaussianBlur in="SourceAlpha" stdDeviation="1.7" result="blur"/&gt;&lt;feOffset in="blur" dx="3" dy="3" result="offsetBlur"/&gt;&lt;feFlood flood-color="#3D4574" flood-opacity="0.4" result="offsetColor"/&gt;&lt;feComposite in="offsetColor" in2="offsetBlur" operator="in" result="offsetBlur"/&gt;&lt;feBlend in="SourceGraphic" in2="offsetBlur"/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g transform="translate(0.5,0.5)" filter="url(#dropShadow)"&gt;&lt;rect x="91" y="5" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(123.5,25.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="54" height="19" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 56px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;"&gt;Shoes&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="27" y="19" fill="#000000" text-anchor="middle" font-size="18px" font-family="Helvetica" font-weight="bold"&gt;Shoes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x="91" y="96" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(126.5,117.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="48" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 48px; white-space: nowrap; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;b&gt;&lt;font style="font-size: 15px"&gt;Sports&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="24" y="14" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x="1" y="186" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(35.5,209.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="50" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 50px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;Nike Air&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="25" y="13" fill="#000000" text-anchor="middle" font-size="13px" font-family="Helvetica" font-weight="bold"&gt;Nike Air&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d="M 61 186 L 144.96 158.01" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 149.94 156.35 L 144.41 161.89 L 144.96 158.01 L 142.19 155.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 151 96 L 151 71.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 151 66.12 L 154.5 73.12 L 151 71.37 L 147.5 73.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;rect x="171" y="186" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(186.5,209.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="88" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 88px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;Rebook Pump&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="44" y="13" fill="#000000" text-anchor="middle" font-size="13px" font-family="Helvetica" font-weight="bold"&gt;Rebook Pump&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d="M 231 186 L 163.89 158.42" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 159.03 156.42 L 166.84 155.85 L 163.89 158.42 L 164.18 162.32 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;g transform="translate(128.5,95.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 1&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(38.5,189.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(208.5,189.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(141.5,139.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(51.5,229.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 3&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(221.5,229.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 4&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(141.5,49.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 1&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(120.5,4.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="61" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 61px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = NULL&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="31" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;Then, you wish to construct a query where for some child category, you want to fetch the entire category hierarchy. For example, starting at &lt;strong&gt;Nike Air&lt;/strong&gt; walk up the tree to find all parent categories (&lt;strong&gt;Sports&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Shoes&lt;/strong&gt;). Or maybe you want to go the other way, starting at &lt;strong&gt;Shoes&lt;/strong&gt; find all child categories. In either scenario, you're going to want to understand recursive queries.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Side note: in this contrived example, there are some techniques you could use to skip recursive queries completely, like denormalising your data by adding the parent id into each child category which would also bring significant performance gains, but I still think it's useful to have recursive queries in your toolkit...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As always, the &lt;a href="http://www.postgresql.org/docs/current/static/queries-with.html"&gt;Postgres docs&lt;/a&gt; are very comprehensive, however, they can be a little daunting when you're getting started - especially if writing SQL isn't something you're doing every day. Since I was recently tasked with solving a similar problem,  the difficulties of understanding it are fresh on my mind. So I figured I'm in a good position to help others do the same.&lt;/p&gt;
&lt;p&gt;I highly, highly recommend typing out all the examples into a &lt;code&gt;psql&lt;/code&gt; session of your own, if you want to get the most out of this article.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;First things first, you'll need to...&lt;/p&gt;
&lt;h2&gt;Understand &lt;code&gt;WITH&lt;/code&gt; queries&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;WITH&lt;/code&gt; queries lets you build a temporary table for use in a subsequent query, also known as "Common Table Expressions" or CTEs. Here's an example where I build a table which uses the &lt;a href="http://www.postgresql.org/docs/9.1/static/sql-values.html"&gt;VALUES&lt;/a&gt; command to return a single row with a number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;column1&lt;/span&gt;
&lt;span class="o"&gt;---------&lt;/span&gt;
       &lt;span class="mi"&gt;99&lt;/span&gt;     
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Side note: This example doesn't do justice to the usefulness of the &lt;code&gt;WITH&lt;/code&gt; statement check out blogs posts like &lt;a href="http://www.craigkerstiens.com/2013/11/18/best-postgres-feature-youre-not-using/"&gt;this&lt;/a&gt; for cool stuff you can do with it.&lt;/em&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Now what if I wanted to perform an operation on the value returned in the temporary table, like taking away 1 from our bottles of beer? And, what if I then wanted to perform an operation on the output of &lt;em&gt;that&lt;/em&gt; operation and so on? Think you can see where I'm going with this.&lt;/p&gt;
&lt;p&gt;For that, we'll need to...&lt;/p&gt;
&lt;h2&gt;Understand &lt;code&gt;WITH RECURSIVE&lt;/code&gt; queries&lt;/h2&gt;
&lt;p&gt;A &lt;code&gt;WITH RECURSIVE&lt;/code&gt; query let's your perform an operation on the output of a &lt;code&gt;WITH&lt;/code&gt; statement until there are no more rows to return. The query is broken down into 3 parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The base query: the query that runs first.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;UNION&lt;/code&gt; operator: which says whether we'll keep duplicate rows or not.&lt;/li&gt;
&lt;li&gt;Then, the recursive part: which will keep operating on the last query's output until no rows are returned or we hit our end condition.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's see if we can use that information to rewrite a query that counts down from 99 to 1:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;              &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                                     &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="n"&gt;UNION&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;                                         &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;   &lt;span class="o"&gt;--&lt;/span&gt; &lt;span class="n"&gt;See&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's break it down:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a temporary table, aka CTE, called &lt;code&gt;bottles_of_beer&lt;/code&gt; with a single column referred to as &lt;code&gt;n&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Build the base query: &lt;code&gt;VALUES (99)&lt;/code&gt; which returns the number &lt;code&gt;99&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Tell Postgres what we want to do with duplicate rows. In this query we're keeping "all", ie not discarding duplicate rows (more on that later).&lt;/li&gt;
&lt;li&gt;Then we define the recursive query, which will subtract 1 from &lt;code&gt;n&lt;/code&gt; while &lt;code&gt;n&lt;/code&gt; is greater than 1.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, we can use the &lt;a href="http://www.postgresql.org/docs/9.1/static/functions-string.html"&gt;&lt;code&gt;||&lt;/code&gt; string concatention operator&lt;/a&gt;, to do the whole bottles of beer song:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;UNION&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;bottles_of_beer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;column1&lt;/span&gt;
&lt;span class="o"&gt;--------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;99&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;
 &lt;span class="mi"&gt;98&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;
 &lt;span class="mi"&gt;97&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;
 &lt;span class="mi"&gt;96&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;
 &lt;span class="mi"&gt;95&lt;/span&gt; &lt;span class="n"&gt;bottles&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;beer&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;wall&lt;/span&gt;
&lt;span class="cp"&gt;# and so on...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cool!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Armed with that knowledge, we can head back to the original problem. But first, it'll help if we...&lt;/p&gt;
&lt;h2&gt;Understand &lt;code&gt;JOIN&lt;/code&gt;s in &lt;code&gt;WITH RECURSIVE&lt;/code&gt; queries&lt;/h2&gt;
&lt;p&gt;Joins in &lt;code&gt;WIH RECURSIVE&lt;/code&gt; queries can be used to join data from a table against the current output of the &lt;code&gt;WITH&lt;/code&gt; query. We can see that in action by solving the problem described in the intro: &lt;strong&gt;starting with Nike Air, can we walk up the tree finding all parent categories?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Firstly let's create the table to represent our data relationship:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CREATE&lt;/span&gt; &lt;span class="n"&gt;TABLE&lt;/span&gt; &lt;span class="nf"&gt;category&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="n"&gt;varchar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;256&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;PRIMARY&lt;/span&gt; &lt;span class="n"&gt;KEY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we'll add the example categories in our diagram:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;INSERT&lt;/span&gt; &lt;span class="n"&gt;INTO&lt;/span&gt; &lt;span class="nf"&gt;category&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;VALUES&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Shoes&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Sports&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Nike&lt;/span&gt; &lt;span class="n"&gt;Air&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Since we have learned the basics of building recursive queries, we can firstly define the non-recursive part:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which simply grabs the &lt;code&gt;Nike Air&lt;/code&gt; category by id.&lt;/p&gt;
&lt;p&gt;Let's put that in a CTE:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;categories&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we decide on the union operator, in this example I'll use &lt;code&gt;UNION&lt;/code&gt; to remove duplicate rows.&lt;/p&gt;
&lt;p&gt;Now here's where it gets interesting: defining the recursive part. Here we'll join the output from the base query to the &lt;code&gt;category&lt;/code&gt; table until there's nothing more to be joined:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
        &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, when the &lt;code&gt;Nike Air&lt;/code&gt; category is first returned, we'll grab a row from the &lt;code&gt;category&lt;/code&gt; table which matches it's parent id. Then when that comes back, we'll grab its parent until we can't find any more parents.&lt;/p&gt;
&lt;p&gt;Now, let's put it all together:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
   &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
     &lt;span class="n"&gt;UNION&lt;/span&gt;
   &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
        &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go ahead and run that. Does it work? Here's what was returned for me:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;name&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;span class="o"&gt;----+--------------+-----------&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nike&lt;/span&gt; &lt;span class="n"&gt;Air&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Sports&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Shoes&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Cool!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Okay, challenge number 2, let's go the other way: &lt;strong&gt;start at the top-level return all the children&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;There's nothing new here, we just simply change our base query to start by selecting our top-level parent then join any category with a parent id that matches our current result's id. Like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="n"&gt;UNION&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
         &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
         &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go ahead and run that. I'll wait...&lt;/p&gt;
&lt;p&gt;Here's what was returned for me:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;top_level&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;name&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;span class="o"&gt;----+--------------+-----------&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Shoes&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Sports&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nike&lt;/span&gt; &lt;span class="n"&gt;Air&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Choice!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Now what would happen if someone goofed up and created a top-level category with a parent id of a child category, creating a circular relationship. Like this:&lt;/p&gt;
&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="336" version="1.1" content="%3CmxGraphModel%20dx%3D%22650%22%20dy%3D%22486%22%20grid%3D%221%22%20gridSize%3D%2210%22%20guides%3D%221%22%20tooltips%3D%221%22%20connect%3D%221%22%20arrows%3D%221%22%20fold%3D%221%22%20page%3D%221%22%20pageScale%3D%221%22%20pageWidth%3D%22826%22%20pageHeight%3D%221169%22%20background%3D%22%23ffffff%22%20math%3D%220%22%20shadow%3D%220%22%3E%3Croot%3E%3CmxCell%20id%3D%220%22%2F%3E%3CmxCell%20id%3D%221%22%20parent%3D%220%22%2F%3E%3CmxCell%20id%3D%222%22%20value%3D%22Shoes%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfillColor%3D%23ffffff%3BstrokeColor%3D%23000000%3BlabelBackgroundColor%3D%23ffffff%3BfontStyle%3D1%3BfontSize%3D18%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22250%22%20y%3D%2249%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%223%22%20value%3D%22%26lt%3Bb%26gt%3B%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%2015px%26quot%3B%26gt%3BSports%26lt%3B%2Ffont%26gt%3B%26lt%3B%2Fb%26gt%3B%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22250%22%20y%3D%22140%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%224%22%20value%3D%22Nike%20Air%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfontStyle%3D1%3BfontSize%3D13%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22160%22%20y%3D%22230%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%225%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3BentryX%3D0.5%3BentryY%3D1%3B%22%20parent%3D%221%22%20source%3D%224%22%20target%3D%223%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%226%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3B%22%20parent%3D%221%22%20source%3D%223%22%20target%3D%222%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%227%22%20value%3D%22Rebook%20Pump%22%20style%3D%22rounded%3D1%3BwhiteSpace%3Dwrap%3Bhtml%3D1%3BfontStyle%3D1%3BfontSize%3D13%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22330%22%20y%3D%22230%22%20width%3D%22120%22%20height%3D%2260%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%228%22%20value%3D%22%22%20style%3D%22endArrow%3Dclassic%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3BentryX%3D0.558%3BentryY%3D1%3BentryPerimeter%3D0%3B%22%20parent%3D%221%22%20source%3D%227%22%20target%3D%223%22%20edge%3D%221%22%3E%3CmxGeometry%20width%3D%2250%22%20height%3D%2250%22%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CmxPoint%20x%3D%2210%22%20y%3D%2260%22%20as%3D%22sourcePoint%22%2F%3E%3CmxPoint%20x%3D%2260%22%20y%3D%2210%22%20as%3D%22targetPoint%22%2F%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2210%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%201%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%22136%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2212%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22180%22%20y%3D%22230%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2213%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22350%22%20y%3D%22230%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2214%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%202%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%22180%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2215%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%203%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22180%22%20y%3D%22270%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2216%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%204%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22350%22%20y%3D%22270%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2217%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bid%20%3D%201%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%2290%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2222%22%20style%3D%22edgeStyle%3DorthogonalEdgeStyle%3Brounded%3D0%3Bhtml%3D1%3BexitX%3D0.5%3BexitY%3D0%3BentryX%3D0.5%3BentryY%3D1%3BjettySize%3Dauto%3BorthogonalLoop%3D1%3BfontSize%3D13%3B%22%20edge%3D%221%22%20parent%3D%221%22%20source%3D%2218%22%20target%3D%2215%22%3E%3CmxGeometry%20relative%3D%221%22%20as%3D%22geometry%22%3E%3CArray%20as%3D%22points%22%3E%3CmxPoint%20x%3D%22310%22%20y%3D%2225%22%2F%3E%3CmxPoint%20x%3D%22130%22%20y%3D%2225%22%2F%3E%3CmxPoint%20x%3D%22130%22%20y%3D%22310%22%2F%3E%3CmxPoint%20x%3D%22220%22%20y%3D%22310%22%2F%3E%3C%2FArray%3E%3C%2FmxGeometry%3E%3C%2FmxCell%3E%3CmxCell%20id%3D%2218%22%20value%3D%22%26lt%3Bfont%20style%3D%26quot%3Bfont-size%3A%208px%26quot%3B%26gt%3Bparent%20id%20%3D%203%26lt%3B%2Ffont%26gt%3B%22%20style%3D%22text%3Bhtml%3D1%3BstrokeColor%3Dnone%3BfillColor%3Dnone%3Balign%3Dcenter%3BverticalAlign%3Dmiddle%3BwhiteSpace%3Dwrap%3Boverflow%3Dhidden%3B%22%20parent%3D%221%22%20vertex%3D%221%22%3E%3CmxGeometry%20x%3D%22270%22%20y%3D%2245%22%20width%3D%2280%22%20height%3D%2220%22%20as%3D%22geometry%22%2F%3E%3C%2FmxCell%3E%3C%2Froot%3E%3C%2FmxGraphModel%3E" ondblclick="(function(svg){if(svg.wnd!=null&amp;amp;&amp;amp;!svg.wnd.closed){svg.wnd.focus();}else{var r=function(evt){if(evt.data=='ready'&amp;amp;&amp;amp;evt.source==svg.wnd){svg.wnd.postMessage(decodeURIComponent(svg.getAttribute('content')),'*');window.removeEventListener('message',r);}};window.addEventListener('message',r);svg.wnd=window.open('https://www.draw.io/?client=1&amp;amp;chrome=0&amp;amp;edit=_blank');}})(this);" viewBox="0 0 336 309" style="max-width:100%;max-height:309px;"&gt;&lt;defs&gt;&lt;filter id="dropShadow"&gt;&lt;feGaussianBlur in="SourceAlpha" stdDeviation="1.7" result="blur"/&gt;&lt;feOffset in="blur" dx="3" dy="3" result="offsetBlur"/&gt;&lt;feFlood flood-color="#3D4574" flood-opacity="0.4" result="offsetColor"/&gt;&lt;feComposite in="offsetColor" in2="offsetBlur" operator="in" result="offsetBlur"/&gt;&lt;feBlend in="SourceGraphic" in2="offsetBlur"/&gt;&lt;/filter&gt;&lt;/defs&gt;&lt;g transform="translate(0.5,0.5)" filter="url(#dropShadow)"&gt;&lt;rect x="128" y="32" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(160.5,52.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="54" height="19" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 18px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 56px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;background-color:#ffffff;"&gt;Shoes&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="27" y="19" fill="#000000" text-anchor="middle" font-size="18px" font-family="Helvetica" font-weight="bold"&gt;Shoes&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x="128" y="123" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(163.5,144.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="48" height="16" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 48px; white-space: nowrap; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;b&gt;&lt;font style="font-size: 15px"&gt;Sports&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="24" y="14" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;rect x="38" y="213" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(72.5,236.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="50" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 50px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;Nike Air&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="25" y="13" fill="#000000" text-anchor="middle" font-size="13px" font-family="Helvetica" font-weight="bold"&gt;Nike Air&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d="M 98 213 L 181.96 185.01" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 186.94 183.35 L 181.41 188.89 L 181.96 185.01 L 179.19 182.25 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 188 123 L 188 98.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 188 93.12 L 191.5 100.12 L 188 98.37 L 184.5 100.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;rect x="208" y="213" width="120" height="60" rx="9" ry="9" fill="#ffffff" stroke="#000000" pointer-events="none"/&gt;&lt;g transform="translate(223.5,236.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="88" height="13" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 13px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 88px; white-space: nowrap; font-weight: bold; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;Rebook Pump&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="44" y="13" fill="#000000" text-anchor="middle" font-size="13px" font-family="Helvetica" font-weight="bold"&gt;Rebook Pump&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d="M 268 213 L 200.89 185.42" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 196.03 183.42 L 203.84 182.85 L 200.89 185.42 L 201.18 189.32 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;g transform="translate(165.5,122.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 1&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(75.5,216.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(245.5,216.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(178.5,166.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 2&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(88.5,256.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 3&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(258.5,256.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 4&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;g transform="translate(178.5,76.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="19" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 21px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;id = 1&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="10" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;path d="M 188 28 L 188 8 L 8 8 L 8 293 L 98 293 L 98 279.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;path d="M 98 274.12 L 101.5 281.12 L 98 279.37 L 94.5 281.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/&gt;&lt;g transform="translate(165.5,31.5)"&gt;&lt;switch&gt;&lt;foreignObject style="overflow:visible;" pointer-events="all" width="45" height="12" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; overflow: hidden; max-height: 20px; max-width: 80px; width: 45px; white-space: normal; text-align: center;"&gt;&lt;div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;"&gt;&lt;font style="font-size: 8px"&gt;parent id = 3&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;/foreignObject&gt;&lt;text x="23" y="12" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica"&gt;[Not supported by viewer]&lt;/text&gt;&lt;/switch&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;This is where it'd help for us too...&lt;/p&gt;
&lt;h2&gt;Understand the &lt;code&gt;UNION&lt;/code&gt; statement&lt;/h2&gt;
&lt;p&gt;As already covered, the &lt;code&gt;UNION&lt;/code&gt; statement basically tells Postgres what to do with duplicate rows. &lt;code&gt;UNION ALL&lt;/code&gt; is basically saying: don't discard dupes eg union all the things, where &lt;code&gt;UNION&lt;/code&gt; discards dupes (if you are familiar with set theory at all, then you are probably familiar with &lt;a href="https://en.wikipedia.org/wiki/Union_(set_theory)"&gt;union&lt;/a&gt; already).&lt;/p&gt;
&lt;p&gt;So let's try creating the messed up data relationship, by creating an infinite recursive loop.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;UPDATE&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run the same query from the last section:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="n"&gt;UNION&lt;/span&gt; &lt;span class="n"&gt;ALL&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
        &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category_tree&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you're playing along at home, you'll notice that query never completes and you'll need to Ctrl + c your way of it. That's because each time the recursive part of the query is run, rows are returned. So it never reaches an end condition.&lt;/p&gt;
&lt;p&gt;We can combat this problem by using &lt;code&gt;UNION&lt;/code&gt; instead of &lt;code&gt;UNION ALL&lt;/code&gt; to discards duplicate rows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;WITH&lt;/span&gt; &lt;span class="n"&gt;RECURSIVE&lt;/span&gt; &lt;span class="n"&gt;top_category&lt;/span&gt; &lt;span class="n"&gt;AS&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt; &lt;span class="n"&gt;WHERE&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="n"&gt;UNION&lt;/span&gt;
    &lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt;
        &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;
        &lt;span class="n"&gt;JOIN&lt;/span&gt; &lt;span class="n"&gt;top_category&lt;/span&gt; &lt;span class="n"&gt;ON&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;top_category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;parent_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;category&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;top_category&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now when the query goes to join the &lt;code&gt;Shoes&lt;/code&gt; row with &lt;code&gt;Nike Air&lt;/code&gt;, it finds a duplicate row, since we are discarding dupe, there's nothing left to join so we return. Voilà:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;name&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;parent_id&lt;/span&gt;
&lt;span class="o"&gt;----+--------------+-----------&lt;/span&gt;
  &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rebook&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;2&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Sports&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Shoes&lt;/span&gt;        &lt;span class="o"&gt;|&lt;/span&gt;         &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="n"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you may or may not be asking, how does it actually work under the hood? If you're in the former camp, read on...&lt;/p&gt;
&lt;h3&gt;Understand (very loosely) how it works&lt;/h3&gt;
&lt;p&gt;Let's try to understand what's going on here, according to the docs. This isn't me deep diving into the Postgres code base, so it could very well be wrong, but hopefully it's a close enough approximation.&lt;/p&gt;
&lt;p&gt;We have already determined that the first step in evaluating recursive queries is to deal with the non-recursive term. According to the docs, the output of this query is place onto a table called the "working table". This output is also appending to our results. So we have 2 data structures that looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Results&lt;/span&gt;                         &lt;span class="n"&gt;Working&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------&lt;/span&gt;   &lt;span class="o"&gt;--------------------------------&lt;/span&gt;

&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we evaluate the recursive term against the working table, which in this case is &lt;code&gt;SELECT category.id, category.name, category.parent_id FROM category JOIN top_category ON (category.id = top_category.parent_id)&lt;/code&gt;. Effectively we're saying "get a thing from &lt;code&gt;category&lt;/code&gt; which can be joined against our working table". So, we fetch the sports category. This time we add the results to a table called the "intermediate table". Okay, so now we have 3 structure that look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Results&lt;/span&gt;                         &lt;span class="n"&gt;Working&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;                     &lt;span class="n"&gt;Intermediate&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------&lt;/span&gt;   &lt;span class="o"&gt;--------------------------------&lt;/span&gt;  &lt;span class="o"&gt;--------------------&lt;/span&gt;

&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;              &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="n"&gt;Sports&lt;/span&gt;   &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then the contents of the intermediate table replace the working table and are appended to our results. So our tables look like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Results&lt;/span&gt;                         &lt;span class="n"&gt;Working&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;                     &lt;span class="n"&gt;Intermediate&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;
&lt;span class="o"&gt;-----------------------------&lt;/span&gt;   &lt;span class="o"&gt;--------------------------------&lt;/span&gt;  &lt;span class="o"&gt;--------------------&lt;/span&gt;

&lt;span class="mi"&gt;3&lt;/span&gt;   &lt;span class="n"&gt;Reebok&lt;/span&gt; &lt;span class="n"&gt;Pumps&lt;/span&gt;   &lt;span class="mi"&gt;2&lt;/span&gt;            &lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="n"&gt;Sports&lt;/span&gt;     &lt;span class="mi"&gt;1&lt;/span&gt;                    
&lt;span class="mi"&gt;2&lt;/span&gt;   &lt;span class="n"&gt;Sports&lt;/span&gt;         &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then we keep following this process until there is nothing to replace into our working table.&lt;/p&gt;
&lt;p&gt;And that's that!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Hopefully you now have a better understanding of Postgres recursive queries and how they work. Feel free to hit me up on &lt;a href="https://twitter.com/lexandstuff"&gt;Twitter&lt;/a&gt; if you have questions or if I've gotten anything wrong.&lt;/p&gt;</summary><category term="PostGres"></category><category term="SQL"></category></entry><entry><title>Udacity on XBMC</title><link href="http://lextoumbourou.github.io/blog/posts/udacity-on-xbmc/" rel="alternate"></link><updated>2014-01-16T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2014-01-16:blog/posts/udacity-on-xbmc/</id><summary type="html">&lt;/p&gt;

&lt;p&gt;My latest XBMC addon is ready for human consumption: &lt;a href="https://www.udacity.com/"&gt;Udacity&lt;/a&gt;!&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/udacity_xbmc_lessons.jpg" alt="Lesson from Udacity"&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a name="features"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;&lt;a href="#features"&gt;Features&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;1. Video lectures.&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/udacity_xbmc_lesson_example.jpg" alt="Lecture example"&gt;
&lt;/div&gt;

&lt;p&gt;2. Text and checkbox-based quizzes (for now you'll need some sort of mouse-like device to use them).&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/udacity_xbmc_quiz_example.jpg" alt="Quiz example"&gt;
&lt;/div&gt;

&lt;p&gt;3. Saving your credentials to track your progress online.&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/udacity_xbmc_creds_example.jpg" alt="Credentials example"&gt;
&lt;/div&gt;

&lt;p&gt;4. Bugs. Lots of them. But feel free to tell me all about them on &lt;a href="https://github.com/lextoumbourou/plugin.video.udacity"&gt;Github&lt;/a&gt; or at the &lt;a href="http://forum.xbmc.org/showthread.php?tid=181462"&gt;XBMC forum&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="whats-missing"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#whats-missing"&gt;What's missing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;1. Programming quizzes aren't supported and probably never will be. XBMC doesn't really have the tools yet to support large amounts of text input.&lt;/p&gt;
&lt;p&gt;2. Any form of guarantee that the thing will actually work. As soon as Udacity update their API it's adios muchachos...&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="installation"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#installation"&gt;How to install it&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The addon is available through the official repo: &lt;strong&gt;Videos&lt;/strong&gt; &amp;gt; &lt;strong&gt;Add-ons&lt;/strong&gt; &amp;gt; &lt;strong&gt;Get More...&lt;/strong&gt; &amp;gt; &lt;strong&gt;Udacity&lt;/strong&gt; &amp;gt; &lt;strong&gt;Install&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/udacity_xbmc_install.jpg" alt="Installation"&gt;
&lt;/div&gt;

&lt;p&gt;Hope you like it.&lt;/p&gt;</summary><category term="MOOCs"></category><category term="XBMC"></category><category term="Udacity"></category></entry><entry><title>Computational Investing, Part I (Coursera) Review</title><link href="http://lextoumbourou.github.io/blog/posts/computational-investing-part-i-coursera-review/" rel="alternate"></link><updated>2013-12-02T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2013-12-02:blog/posts/computational-investing-part-i-coursera-review/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="#about-the-course"&gt;About The Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#my-background"&gt;My Background&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#signature-track"&gt;Signature Track&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#course-overview"&gt;Course Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-i-loved"&gt;What I Loved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-i-would-improve"&gt;What Could Be Improved&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a name="about-the-course"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#about-the-course"&gt;About The Course&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Computational Investing, Part I was instructed by Tucker Balch, a professor at Georgia Institute of Technology. Tucker is an ex-fighter pilot (according to his opening video), the founder of &lt;a href="https://lucenaresearch.com/"&gt;Lucena Research&lt;/a&gt; and has a PhD in Robotics and Machine Learning.&lt;/p&gt;
&lt;p&gt;The course page notes that it is "intended for folks who have a strong programming background, but who are new to finance and investing"; a close enough description to me.&lt;/p&gt;
&lt;p&gt;&lt;a name="my-background"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#my-background"&gt;My Background&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I came across the course through someone's comment on Hacker News and signed up immediately.  I have been running a site for a couple of years called &lt;a href="http://en.wikipedia.org/wiki/Efficient-market_hypothesis"&gt;MagicRanker&lt;/a&gt;, a simple implementation of a thing called the Magic Formula from &lt;a href="http://www.amazon.com/Little-Still-Market-Books-Profits/dp/0470624159"&gt;The Little Book That Beats The Market&lt;/a&gt;. My money is invested following this approach, so I guess you could say I have experience with "computational investing", but generally I have no idea what I'm doing.&lt;/p&gt;
&lt;p&gt;I have, however, spent the last couple of years coding mostly in Python and I'm pretty comfortable with it; so I was lucky that the course's projects were all Python based. Though at the time though I hadn't played with the cornerstone data science libraries like NumPy and Pandas.&lt;/p&gt;
&lt;p&gt;&lt;a name="signature-track"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#signature-track"&gt;Signature Track&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Tucker's class was one of the first to utilise Coursera's &lt;a href="http://blog.coursera.org/post/40080531667/signaturetrack"&gt;Signature Track&lt;/a&gt;. Which, for a $50 (AUS) fee, provides identity verification through ID scans and "keystroke biometric" profiling (apparently a &lt;a href="http://en.wikipedia.org/wiki/Keystroke_dynamics"&gt;thing&lt;/a&gt;)&lt;/a&gt; and is therefore able to give you a credible certificate. I decided to sign up for it and I'm glad I did. My problem with MOOCs is that I often find myself distracted with life halfway through, and emptily promise that I'll "finish it one day". &lt;span class="pull_quote right"&gt;But by being slightly out of pocket though Signature Track, I felt a sense of commitment that helped me prioritise the course.&lt;/span&gt; Though I didn't like the idea initially, I think Coursera's hard course start and end dates help with this too.&lt;/p&gt;
&lt;p&gt;Interestingly, according to &lt;a href="http://augmentedtrader.wordpress.com/2013/11/20/a-comparison-of-online-mooc-versus-on-campus-course-delivery/"&gt;Tucker's blog&lt;/a&gt;, the "completion rate for MOOC students who invested ... at the beginning of the course for a validated certificate was 99.0%." A good sign for MOOCs, who journalists love to bemoan for their apparently &lt;a href="http://www.timeshighereducation.co.uk/news/mooc-completion-rates-below-7/2003710.article"&gt;low completion rates&lt;/a&gt;.&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/comp_investing_verified.jpg" alt="Signature track"&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a name="course-overview"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#course-overview"&gt;Course Overview&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Week 1 begun with an overview of the course. It was mentioned in one of the first slides that "students will grade each other". I'd heard about this before and was interested to see if it would work. Turned out, however, that all assignments were server graded. Given my busy circumstances, I was thankful. The next modules covered the basics of hedge fund management, including how managers are paid and how they attract investors. Then a look at what to expect from the rest of the course.&lt;/p&gt;
&lt;p&gt;Week 2 opened with a series on estimating company value using balance sheet metrics, news and other information. Event studies were also discussed, followed by a lecture on &lt;a href="http://en.wikipedia.org/wiki/Capital_asset_pricing_model"&gt;Capital Asset Pricing Model (CAPM)&lt;/a&gt;. If I'm honest, I found the presentation of this topic a little dry and hard to follow. For me, &lt;a href="http://www.mbabullshit.com"&gt;MBA Bullshit&lt;/a&gt; had a far simpler &lt;a href="http://www.youtube.com/watch?v=LWsEJYPSw0k"&gt;CAPM Introductory Series&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Week 3 was a joy. &lt;a href="http://www.numpy.org"&gt;NumPy&lt;/a&gt; was introduced, as was &lt;a href="http://pandas.pydata.org"&gt;pandas&lt;/a&gt;, through a series of video tutorials that accompanied a &lt;a href="http://wiki.quantsoftware.org/index.php?title=Numpy_Tutorial_1"&gt;text-only series&lt;/a&gt;. The video tutorials were paced a little slow and I preferred the text version. Later we were acquainted with a quant library built for the course called &lt;a href="http://wiki.quantsoftware.org/index.php?title=QuantSoftware_ToolKit"&gt;QuantSoftware ToolKit&lt;/a&gt;, highlighting the richness of resources provided by the team.&lt;/p&gt;
&lt;p&gt;The very first homework was assigned, creating a "brute force" portfolio optimiser. I found the assignment to be easier than understanding the lectures, at least the parts of the assignment required to pass.&lt;/p&gt;
&lt;p&gt;Week 4 delved into market arbitrage: the various ways investors exploit market inefficiencies. A theory called &lt;a href="http://en.wikipedia.org/wiki/Efficient-market_hypothesis"&gt;The Effective-market Hypothesis&lt;/a&gt; was covered. The video sound quality this week was particularly poor. I think the team was experimenting with different recording techniques, as it improved the week after. &lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/comp_investing_efficient_markets.jpg" alt="Definitely coffee in the cup"&gt;
    &lt;p&gt;Definitely coffee in the cup&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Lastly, there was a lengthy discussion around portfolio optimisation and the second homework was assigned: performing an Event Study. Most of the code was already provided and only minor tweaks were required to pass the exam.&lt;/p&gt;
&lt;p&gt;Week 5 was another extremely useful week for me. Bollinger Bands were introduced, followed by a discussion around the difference between &lt;em&gt;closing&lt;/em&gt; price and &lt;em&gt;actual closing&lt;/em&gt; price (actual close factors in things like stock splits and dividends). Additionally, there were modules covering practical techniques for dealing with bad market data from providers. &lt;/p&gt;
&lt;p&gt;The homework here was harder than last week's. The assignment was to create a straight forward Market Simulator. With a bit of effort, though, I was able to piece something together that passed the quiz. I do question how well I would have done had a human graded my code - it was often not pretty.&lt;/p&gt;
&lt;p&gt;Week 6 furthered the discussion around assessing event studies. Then, different investing strategies were compared using &lt;a href="http://en.wikipedia.org/wiki/Warren_Buffett"&gt;Warren Buffett&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/James_Harris_Simons"&gt;Jim Simons&lt;/a&gt; as opposing case studies. An in-depth discussion about CAPM followed. As before, I had trouble groking this. Partly, I'm sure, due to a lack of interest.&lt;/p&gt;
&lt;p&gt;The week's homework pieced together two of the earlier assignments, creating an event study and then running it through a simulator. Since the hard work was already done, the task was trivial.&lt;/p&gt;
&lt;p&gt;Week 7 was, from a financial perspective, probably the most practical week. Videos covered the different information feeds available for hedge fund managers then a discussion around Technical Analysis.&lt;/p&gt;
&lt;p&gt;The majority of the latter half of the week was set aside to talk about the homework assignment, an implementation of Bollinger Bands.&lt;/p&gt;
&lt;div class="img-annotated"&gt;
    &lt;img src="/images/comp_investing_question.jpg" alt="An example of the quiz from Week 7"&gt;
    &lt;p&gt;An example of the quiz from Week 7&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Week 8, the final module, was centred around two homework assignments building from previous week's work. In the first, we were to perform an event study based on Bollinger Bands and, in the second, feed that data into a market simulator.&lt;/p&gt;
&lt;p&gt;I wish I had had more time to spend on them. I ended up knocking together a half baked solution that narrowly passed the exam, moments before I left for a week long holiday. I also needed help from the forum here. I'm not proud of the code, and I doubt I would have done very well if an instructor graded it.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="what-i-loved"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#what-i-loved"&gt;What I Loved&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Firstly, Tucker and the team put a lot of work into the course and it shows. The course was filled with supplimentary material like professional interviews, book recommendations, the QSTK libary, programming tutorials and a wiki rich with content.&lt;/p&gt;
&lt;p&gt;I really got a kick out of the programming side too. Just being introduced to NumPy and Pandas made the course worth my time. With the little bit of knowledge I got from this course and &lt;a href="http://shop.oreilly.com/product/0636920023784.do"&gt;this book&lt;/a&gt;, I was able to rewrite the internals of MagicRanker and make it a shit load faster and more extensible.&lt;/p&gt;
&lt;p&gt;I was also quite thankful that the homework was relatively easy. Hard enough to keep me thinking but, for a person with a decent amount of programming experience, definitely passable. Perhaps a little too easy at times.&lt;/p&gt;
&lt;p&gt;&lt;a name="what-i-would-improve"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#what-i-would-improve"&gt;What Could Be Improved&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The course lectures were sometimes a little dry and a bit long for my Gen Y attention span. Udacity's model of providing question-based "checkpoints" along the way, really helped to keep me engaged and break up the videos. This course could consider something similar. Come to think of it, there were actually a couple of them in earlier videos but they seemed to disappear by Week 2.&lt;/p&gt;
&lt;p&gt;There was also a number of problems with the video quality, including low audio, distorted audio, bloopers and so forth. Sometimes I wondered why they hadn't rerecorded the videos where there were clearly major defects.&lt;/p&gt;
&lt;p&gt;I think Coursera has some work to do with the interface too. I found it slightly annoying that the video couldn't be made full screen via the UI. Not sure why they would prevent that, since they have the videos available for download. Lastly, I found the forums a little disorientating. Especially coming from Udacity's forum system where posts are linked to lessons and assignments making it clear what they're about. Though, in fairness, I didn't spend much time getting used to the forum.&lt;/p&gt;
&lt;p&gt;Completely unrelated to the course quality, but I also had a bit of trouble with a lot of the "maths" that goes into finance. Often there are &lt;em&gt;theoretical world&lt;/em&gt; values plugged into formulas that involve &lt;em&gt;real world&lt;/em&gt; implications. The idea of the "risk premium" in CAPM is a good example of this - can the standard deviation of an investment's historic performance really be enough to say if it is safe or not?&lt;/p&gt;
&lt;p&gt;&lt;a name="summary"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Minor flaws aside, if you've got an interest in the quant world and a reasonable programming background, you will almost certainly find this course worthwhile. If you haven't programmed before, then I would consider taking an introductory course first.&lt;/p&gt;
&lt;p&gt;Despite the persistent criticisms, the MOOC phenomena over the last couple of years has improved my life considerably and I'm in debt to people, like Tucker and his team, who are willing to upload high-quality courses like this for &lt;em&gt;free&lt;/em&gt;. We are living in a magical time.&lt;/p&gt;</summary><category term="MOOCs"></category><category term="Investing"></category><category term="Python"></category></entry><entry><title>Packet capturing in parallel with Ansible</title><link href="http://lextoumbourou.github.io/blog/posts/packet-capturing-in-parallel-ansible/" rel="alternate"></link><updated>2013-08-13T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2013-08-13:blog/posts/packet-capturing-in-parallel-ansible/</id><summary type="html">&lt;p&gt;&lt;a name="intro"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="intro"&gt;
Ansible continues to amaze me. It seems to be able to solve so many
problems with such simplicity and I keep finding new uses for it. Enter
today's problem and solution.
&lt;/div&gt;

&lt;h3&gt;The Problem&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Run Tcpdump for a short window in parallel across a massive test
    environment while front-end tests are performed&lt;/li&gt;
&lt;li&gt;Gzip and tar each generated pcap and copy to a remote share for
    distribution&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After getting my environment setup right, the solution took me a total
of 30 minutes to write and deploy. Plus, it is completely reusable in
any environment (though the interface parameter passed to tcpdump may
require tweaking).&lt;/p&gt;
&lt;h3&gt;The Solution&lt;/h3&gt;
&lt;p&gt;1. First I utilised Ansible's host variables to create a unique file
name for each server.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;all&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;sudo&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;vars&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;cap_file&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;packet_capture_{{ ansible_hostname }}_{{ ansible_date_time[&amp;#39;epoch&amp;#39;] }}.cap&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2. Then I kicked off a Tcpdump on each server in parallel. Ansible
runs 5 parallel processes by default, this can be increased by passing
the &lt;code&gt;--forks=10&lt;/code&gt; parameter (replacing 10 with the number of servers) to the &lt;code&gt;ansible-playbook&lt;/code&gt; script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
     &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;start tcpdump&lt;/span&gt;
       &lt;span class="l-Scalar-Plain"&gt;command&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/usr/sbin/tcpdump -i eth0 -s 0 -w /tmp/${cap_file}&lt;/span&gt;
       &lt;span class="l-Scalar-Plain"&gt;async&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;60&lt;/span&gt;
       &lt;span class="l-Scalar-Plain"&gt;poll&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;As well as running Playbooks against servers in parallel, tasks can be
run asynchronously by setting the &lt;code&gt;async&lt;/code&gt; (maximum runtime) and &lt;code&gt;poll&lt;/code&gt;
(how often to poll the job for status). In this example, I'm using
Ansible's &lt;a href="http://www.ansibleworks.com/docs/playbooks2.html#id19"&gt;fire-and-forget&lt;/a&gt; pattern to run the command without
pausing, allowing me to kill it later on in the Playbook.&lt;/p&gt;
&lt;p&gt;3. Next the script is &lt;a href="http://www.ansibleworks.com/docs/modules.html#pause"&gt;paused&lt;/a&gt; for a minute allowing the testers to
run through their failing tests.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;pause&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;minutes=1 prompt=&amp;quot;pause for 60 seconds or press Ctrl + c then c to continue&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4. Then I kill off the tcpdump command with pkill.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;kill tcpdump&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;command&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/usr/bin/pkill tcpdump&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;ignore_errors&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5. Lastly, I can compress the logs and copy them to my localhost using
the &lt;a href="http://www.ansibleworks.com/docs/modules.html#fetch"&gt;fetch&lt;/a&gt; module. The &lt;code&gt;flat&lt;/code&gt; parameter copies up each file
individually. Without it, the files are stored in a
&lt;code&gt;${server_name}/{$path}/file&lt;/code&gt; directory structure, ensuring files with
the same name don't overwrite each other.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;compress capture file&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;command&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;gzip ${cap_file} chdir=/tmp&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;copy logs to local boxes webroot&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;fetch&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;src=/tmp/${cap_file}.gz dest=/var/www/ flat=yes&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It's probably a good idea to clean up the files on the remote server
too.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;remove files from server&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;file&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;path=/tmp/${cap_file}.gz state=absent&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6. Now I run it from the command line...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;ENV&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; ansible-playbook parallel-tcpdump.yml -i hosts
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And like magic:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;(&lt;/span&gt;ENV&lt;span class="o"&gt;)&lt;/span&gt;&amp;gt; ls -1 /var/www/ | grep packet_capture
packet_capture_server1_1376450197.cap.gz
packet_capture_server2_1376450500.cap.gz
packet_capture_server3_1376451234.cap.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's the entire Playbook:&lt;/p&gt;
&lt;script src="https://gist.github.com/lextoumbourou/7611499.js"&gt;&lt;/script&gt;</summary></entry><entry><title>What Are Zombie Processes?</title><link href="http://lextoumbourou.github.io/blog/posts/what-are-zombie-processes/" rel="alternate"></link><updated>2013-06-08T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2013-06-08:blog/posts/what-are-zombie-processes/</id><summary type="html">&lt;p&gt;&lt;a name="intro"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;div class="intro"&gt;
A while back I went for a job interview at a high profile company you've
heard of. Since it was for a system engineer-type role, there were
questions about Unix internals. One of those questions was about zombie
processes. At the time, I hadn't grasped this concept completely and I
recall giving a vague answer about processes whose parent process had
died or something. I didn't get the job.

&lt;p&gt;

In this short article, for my sake if nothing else, I'm going to
clear up the misconceptions I had about zombie/defunct processes,
through a series of explanations and code examples. If you have
experience coding in Python, it'll be helpful, but all the code should
be simple enough that it can be transferred to the scripting language
of your choice.
&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#fundamentals"&gt;Multiprocessing Fundamentals&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-zombie-processes-are-not"&gt;What Zombie Processes Are Not (Spoiler: Orphan Processes)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#what-are-zombie-processes"&gt;So Then, What Zombie Processes Are&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#killing-zombie-processes"&gt;How To "Kill" Zombie Processes&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary (tl;dr)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="fundamentals"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#fundamentals"&gt;Multiprocessing Fundamentals&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When a process spawns a separate process to handle some work, it invokes
the &lt;code&gt;fork(2)&lt;/code&gt; system call. &lt;code&gt;fork(2)&lt;/code&gt; duplicates the current process in
memory and both processes continue executing from the same location. We refer to
the new process as the &lt;em&gt;child&lt;/em&gt; process. We refer to the calling process
as the &lt;em&gt;parent&lt;/em&gt;. Type &lt;code&gt;man 2 fork&lt;/code&gt; for information.&lt;/p&gt;
&lt;p&gt;In the parent process, the &lt;code&gt;fork(2)&lt;/code&gt; call returns the process id, aka
the &lt;em&gt;PID&lt;/em&gt;, of the child process. The same call from the child returns 0.&lt;/p&gt;
&lt;p&gt;Python provides a wrapper around the call called &lt;code&gt;fork()&lt;/code&gt; from the &lt;code&gt;os&lt;/code&gt;
module. Let's see it in action.&lt;/p&gt;
&lt;h5&gt;fork.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="c"&gt;# Fork the process&lt;/span&gt;
&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c"&gt;# We&amp;#39;re in the child process&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: Waddup?&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c"&gt;# We&amp;#39;re in the parent process&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent: I just created child&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;

    &lt;span class="c"&gt;# Sleep for a second to avoid being dropped back to the shell when the parent finishes&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, when I run the script in the terminal, we should see the child
process' PID followed immediately by the code executed in the
child process.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; python fork.py
Parent: I just created child 19478
Child: Waddup?
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;From the child process, we can get the parent process' PID by calling
the &lt;code&gt;getppid(2)&lt;/code&gt; system call. Which, again, Python provides a wrapper
around called &lt;code&gt;os.getppid()&lt;/code&gt;.&lt;/p&gt;
&lt;h5&gt;fork_ppid.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="c"&gt;# We&amp;#39;re in the child process&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: Waddup?&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: My parent is&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent: I just created child&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;
    &lt;span class="c"&gt;# Sleep for a second to avoid being dropped back to the shell when the parent finishes&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; python fork_ppid.py
Parent: I just created child 19741
Child: Waddup?
Child: My parent is 19740
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Of course, we are not limited to just one child process; we can have as
many as we like.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="what-zombie-processes-are-not"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#what-zombie-processes-are-not"&gt;What Zombie Processes Are Not (Spoiler: Orphan Processes)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When a parent process finishes executing before its children, the child
processes are said to become &lt;em&gt;orphan&lt;/em&gt; processes. When this happens, the
child is &lt;em&gt;adopted&lt;/em&gt; by the &lt;em&gt;init&lt;/em&gt; process - the first process executed by
the kernel at boot - which has a PID of 1. The &lt;em&gt;init&lt;/em&gt; process then waits
for the child process to finish.&lt;/p&gt;
&lt;p&gt;Let me add a line to execute in the child process that sleeps for a
second 3 times after printing its parent's PID. The parent will exit on the first iteration, thus &lt;em&gt;orphaning&lt;/em&gt; its child.&lt;/p&gt;
&lt;h5&gt;fork_orphan.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: I&amp;#39;m about to become an orphan!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: My parent is&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent: I just created child&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;
    &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's take a look at the results.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; python fork_orphan.py
Parent: I just created child 19683
Child: I&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;m about to become an orphan!
Child: My parent is 19682
Child: My parent is 1
Child: My parent is 1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So, to prevent the child from becoming an &lt;code&gt;orphan&lt;/code&gt;, our parent process
can call the &lt;code&gt;wait(2)&lt;/code&gt;  system call. &lt;code&gt;wait(2)&lt;/code&gt; effectively waits
for its children to exit then collects some information about them. In
Python, the system call is available as &lt;code&gt;os.wait()&lt;/code&gt; which returns a
tuple containing the child's PID and exit status indication (see docs
for more info).&lt;/p&gt;
&lt;h5&gt;fork_wait.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: Hope my parent doesn&amp;#39;t forget me this time!&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Child: My parent is&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent: My child has finished processing. My work here is done.&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And when we run it?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; python fork_wait.py
Child: Hope my parent doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t forget me this &lt;span class="nb"&gt;time&lt;/span&gt;!
Child: My parent is 20037
Child: My parent is 20037
Child: My parent is 20037
Parent: My child has finished processing. My work here is &lt;span class="k"&gt;done&lt;/span&gt;.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The procedure of orphaning a process is used by the operating system to daemonises a process (which is a topic for another day).&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="what-are-zombie-processes"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#what-are-zombie-processes"&gt;So Then, What Zombie Processes Are&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Zombie processes are, in some ways, the opposite of orphaned processes.
When a child process finishes running, it's state (PID and return code)
sit in the process table waiting for the parent to collect it by
calling &lt;code&gt;wait(2)&lt;/code&gt;. In this state, a child is said to become - wait for it - a &lt;em&gt;defunct&lt;/em&gt; or
&lt;em&gt;zombie&lt;/em&gt; process. Therefore, &lt;span class="pull_quote right"&gt;zombie processes have completed execution 
and thus take up almost no system resources&lt;/span&gt;. However, they do hold on to
PIDs that could potentially be allocated to other processes and, with too
many zombie processes - say if a poorly coded program isn't collecting
return status information fast enough, it's possible for the OS to run out of
PIDs. You can increase the number of available PIDs by modifying the
kernel parameter &lt;code&gt;kernel.pid_max&lt;/code&gt; using either the &lt;code&gt;sysctl&lt;/code&gt; command or by editing the &lt;code&gt;/etc/sysctl.conf&lt;/code&gt; file. More info
is available &lt;a href="http://www.cyberciti.biz/tips/howto-linux-increase-pid-limits.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To see this in action, I'm going to create a program which creates a child process that runs
for 1 second and a parent process that'll sleep indefinitely.&lt;/p&gt;
&lt;h5&gt;fork_zombie.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;getppid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;wait&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;time&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sleep&lt;/span&gt;

&lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;fork&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Child: Goodbye, cruel world&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Parent: I created a child with pid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;\
          &lt;span class="s"&gt;&amp;quot;and now all I want to do is sleep...&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;sleep&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; python fork_zombie.py
Parent: I created a child with pid 26556 and now all I want to &lt;span class="k"&gt;do &lt;/span&gt;is sleep...
Child: Goodbye cruel world!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, in a separate terminal instance (or a separate Screen, Tmux or
Byobu window) let's examine the child process using &lt;code&gt;ps&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; ps -ef | grep 26556
lex      26556 26555  0 21:40 pts/3    00:00:00 &lt;span class="o"&gt;[&lt;/span&gt;python&lt;span class="o"&gt;]&lt;/span&gt; &amp;lt;defunct&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;There we have it, a defunct/zombie process that utilises no memory
awaiting our parent to acknowledge it by calling &lt;code&gt;wait(2)&lt;/code&gt; or for our
parent to die.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="killing-zombie-processes"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#killing-zombie-processes"&gt;How To "Kill" Zombie Processes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;You can't really "kill" zombie processes because, well, they're already dead.&lt;/p&gt;
&lt;p&gt;For some processes, sending the &lt;code&gt;SIGCHLD&lt;/code&gt; signal to the parent process
could instruct it to call &lt;code&gt;wait&lt;/code&gt; and &lt;em&gt;reap&lt;/em&gt; its dead child processes.
However, if a handler hasn't been implemented for &lt;code&gt;SIGCHLD&lt;/code&gt;, then you're
outta luck.&lt;/p&gt;
&lt;p&gt;The only way to clear out a zombie process is for the parent to &lt;em&gt;reap&lt;/em&gt;
the process by calling &lt;code&gt;kill&lt;/code&gt; or for the parent process itself to die.
If, however, there's a zombie processes in the system for a parent
process that's already finished executing, this could be a sign of an
operating system bug.&lt;/p&gt;
&lt;p&gt;In our example, we can get rid of the zombie process by closing the
parent process, which I will do by pressing Ctrl + C in the terminal
where my parent is running.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;^CTraceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;&amp;quot;fork.py&amp;quot;&lt;/span&gt;, line 11, in 
    time.sleep&lt;span class="o"&gt;(&lt;/span&gt;1&lt;span class="o"&gt;)&lt;/span&gt;
KeyboardInterrupt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if we look for the initial zombie process, it should be no where to
be found.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&amp;gt; ps -e | grep 27439
&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;&lt;a name="summary"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#summary"&gt;Summary (tl;dr)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To recap, zombie processes are not orphan processes, they are dead processes: processes that have finished executing and are waiting for the parent to reap them (collect information about their status). You are barking up the wrong tree trying to kill a zombie process because they are already dead. To get rid of a zombie process, kill its parent. Hope that helps.&lt;/p&gt;</summary></entry><entry><title>Getting Started With Ansible</title><link href="http://lextoumbourou.github.io/blog/posts/getting-started-with-ansible/" rel="alternate"></link><updated>2013-02-04T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2013-02-04:blog/posts/getting-started-with-ansible/</id><summary type="html">&lt;p&gt;

&lt;div class="intro"&gt;
This weekend I decided to fix the mess that was my side-project
production environment. I had 3 Linode VMs running 3 or 4 production
websites and a couple of websites in development scattered haphazardly.
There was a Postgres instance wasting cycles on each and no unity across
configs. 

So, I decided I was going to implement some form of automated
configuration management. Tools like Puppet or Chef seemed like
reasonable options, especially since we use Puppet at work, but I have
been wanting to play with Ansible for a while and this seemed like a
good opportunity.
&lt;/div&gt;

&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#why-ansible"&gt;Why Ansible?&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#requirements"&gt;My Requirements&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#part-1"&gt;Part 1: Preparing my Inventory&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#part-2"&gt;Part 2: Configuring Users and Groups with Modules&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#part-3"&gt;Part 3: Automating Tasks Using Playbooks&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#part-4"&gt;Part 4: Using Templates To Setup Privileges and SSH Security&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#part-5"&gt;Part 5: Source Control&lt;/a&gt;  &lt;/li&gt;
&lt;li&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;  &lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="why-ansible"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#why-ansible"&gt;Why Ansible?&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In short: simplicity. Ansible is the kind of tool that you just pick up
and use; the learning curve is minimal. All the communication is handled
via vanilla SSH so there's no clients to install and it uses a push
system for deploying changes, so no central server is required. This
makes the configs portable and the setup costs low. The Playbooks (like
Cookbooks in Chef) are written in YAML and the template engine uses
Jinja2 - tools I'm very familiar with. Lastly, and perhaps for me the
biggest draw card, the source code is written in Python.&lt;/p&gt;
&lt;p&gt;&lt;a name="requirements"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#requirements"&gt;My Requirements&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Before beginning my Ansible journey, I set aside some goals to guide the
process:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I should never, &lt;em&gt;ever&lt;/em&gt; have to log into a production server to
    configure it. That means everything down to the first user account
    should be handled by Ansible.&lt;/li&gt;
&lt;li&gt;Everything configured should be completely self documenting. If I
    come back to them after a year, it should be very clear what
    everything does.&lt;/li&gt;
&lt;li&gt;The entire system should be extremely portable. Any time I need to
    rebuild my development server, the configs should just be a
    &lt;code&gt;git pull&lt;/code&gt; away.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Which that in mind, I documented the steps I followed to get the basics
up and running: user accounts, groups, sshd_config and sudoers. I have
been able to get much further than this in a very short period of time
(thanks largely to Ansible's excellent documentation and ease of use),
in the interest of brevity, let's keep it...brief.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;a name="part-1"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#part-1"&gt;Part 1: Preparing my Inventory&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I started by creating a new Ubuntu VM at Linode and setting a default
password.&lt;/p&gt;
&lt;p&gt;Then, on my development machine, I installed Ansible's prerequisties:
&lt;a href="http://pyyaml.org/"&gt;PyYAML&lt;/a&gt;, &lt;a href="http://jinja.pocoo.org/docs/"&gt;Jinja2&lt;/a&gt; and &lt;a href="http://www.lag.net/paramiko/"&gt;Paramiko&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:~&amp;gt; sudo pip install pyyaml jinja2 paramiko
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note: it is trivial to run Ansible in a &lt;a href="http://www.virtualenv.org/en/latest/"&gt;virtualenv&lt;/a&gt; container and
generally a good idea. For simplicity sake, I've skipped those steps
here.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Next, following Ansible's &lt;a href="http://ansible.cc/docs/gettingstarted.html#contents"&gt;install instructions&lt;/a&gt;, I cloned the repo,
checking out the latest stable branch and installed it using
&lt;a href="http://docs.python.org/2/distutils/index.html"&gt;distutils&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:~&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;src
lex@desktop:~/src&amp;gt; git clone -b release0.9 git://github.com/ansible/ansible.git
lex@desktop:~/src&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;ansible
lex@desktop:~/src/ansible&amp;gt; sudo python setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After, I created the &lt;code&gt;/etc/ansible/&lt;/code&gt; directory which housed my first
&lt;a href="http://ansible.cc/docs/patterns.html#hosts-and-groups"&gt;hosts&lt;/a&gt; file, initially just listing my created VM (but would soon
list all my servers in production).&lt;/p&gt;
&lt;h5&gt;/etc/ansible/hosts&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[webservers]&lt;/span&gt;
&lt;span class="err"&gt;prodweb03&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The host file can also include additional per-host and per-group
variables which are useful for configuring things like network settings
and so on. Consult the &lt;a href="http://ansible.cc/docs/patterns.html"&gt;Inventory and Patterns&lt;/a&gt; section of the doco
for more info.&lt;/p&gt;
&lt;p&gt;I then tested connectivity to the web servers using the &lt;code&gt;ping&lt;/code&gt; module
(more on Ansible's modules and syntax later).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; ansible all -m ping -u root --ask-pass
SSH password:
prodweb03 | success &amp;gt;&amp;gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt;: &lt;span class="nb"&gt;false&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;ping&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;pong&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="part-2"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#part-2"&gt;Part 2: Configuring Users and Groups with Modules&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ansible has a reasonable library of modules built-in which can be
executed via Playbooks or directly via the command line. The latter's
&lt;a href="http://ansible.cc/docs/examples.html"&gt;syntax&lt;/a&gt; looks a bit like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:~&amp;gt; ansible &amp;lt;host_pattern&amp;gt; -m &amp;lt;module_name&amp;gt; -a &amp;lt;module_args&amp;gt; &amp;lt;additional_args&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For example, I can utilise the &lt;code&gt;command&lt;/code&gt; module to run &lt;code&gt;uptime&lt;/code&gt; across
my hosts.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; ansible webservers -m &lt;span class="nb"&gt;command&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;uptime&amp;quot;&lt;/span&gt; -u root --ask-pass
SSH password:
prodweb03 | success | &lt;span class="nv"&gt;rc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &amp;gt;&amp;gt;
 06:55:23 up 12 min,  1 user,  load average: 0.00, 0.01, 0.01
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;Note that by default, Ansible attempts to perform operations as the
local user, using public key authentication. Since I don't have any
users setup remotely just yet, nor any keys, I'll have to explicitly run
the command as root (&lt;code&gt;-u root&lt;/code&gt;) forcing a password prompt
(&lt;code&gt;--ask-pass&lt;/code&gt;).&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;To start the configuration process, I configured my user accounts using
the &lt;code&gt;group&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; modules, with the intention of later moving the
commands to Playbooks.&lt;/p&gt;
&lt;p&gt;Here I created a group called &lt;code&gt;admin&lt;/code&gt;, with a GID of 1000.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; ansible webservers -m group -a &lt;span class="s2"&gt;&amp;quot;gid=1000 name=admin state=present&amp;quot;&lt;/span&gt; -u root --ask-pass
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hopefully, the arguments I'm passing to the module are self-explanatory.
If not, consult the amazingly simple &lt;a href="http://ansible.cc/docs/modules.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, I created my user account with the &lt;code&gt;user&lt;/code&gt; module, and uploaded my
&lt;code&gt;authorized_key&lt;/code&gt; file using the module with the same name.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; ansible webservers -m user -a &lt;span class="se"&gt;\&lt;/span&gt;
                          &lt;span class="s2"&gt;&amp;quot;name=lex group=admin shell=/bin/bash uid=1000&amp;quot;&lt;/span&gt; -u root --ask-pass
lex@desktop:/etc/ansible&amp;gt; ansible webservers -m authorized_key -a &lt;span class="se"&gt;\&lt;/span&gt;
                          &lt;span class="s2"&gt;&amp;quot;user=lex key=&amp;#39;$(cat ~/.ssh/id_rsa.pub)&amp;#39;&amp;quot;&lt;/span&gt; -u root --ask-pass
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, since I have &lt;code&gt;ssh-agent&lt;/code&gt; running, I can perform commands across the
server(s) as myself.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; ansible webservers -m &lt;span class="nb"&gt;command&lt;/span&gt; -a &lt;span class="s2"&gt;&amp;quot;uptime&amp;quot;&lt;/span&gt;
prodweb03 | success | &lt;span class="nv"&gt;rc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0 &amp;gt;&amp;gt;
 07:31:47 up 48 min,  1 user,  load average: 0.00, 0.01, 0.02
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="part-3"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#part-3"&gt;Part 3: Automating Tasks Using Playbooks&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Playbooks are &lt;a href="http://www.yaml.org/"&gt;YAML&lt;/a&gt; configuration files that define a set of tasks or
&lt;em&gt;Plays&lt;/em&gt; to be executed on the remote server. Following Ansible's &lt;a href="http://ansible.cc/docs/bestpractices.html"&gt;Best
Practises&lt;/a&gt; document, I created a &lt;code&gt;company_name&lt;/code&gt; directory to house my
Playbooks and additional files. Then, I created the first Playbook,
&lt;code&gt;initial.yml&lt;/code&gt;, where I would store the user and group creation tasks I
ran manually earlier.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible&amp;gt; mkdir lexandstuff
lex@desktop:/etc/ansible&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;lexandstuff/
lex@desktop:/etc/ansible/lexandstuff&amp;gt; vi initial.yml
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;webservers&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;sudo&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;

  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;# ===============================================================&lt;/span&gt;
    &lt;span class="c1"&gt;# Configure user&amp;#39;s and groups&lt;/span&gt;
    &lt;span class="c1"&gt;# ===============================================================&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;create admin group&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;group name=admin gid=1000 system=no&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;create user(s)&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user name=lex group=admin shell=/bin/bash uid=1000&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;setup authorized key(s)&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;authorized_key user=lex key=&amp;#39;$FILE(/home/lex/.ssh/id_rsa.pub)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The syntax is quite self-explanatory: &lt;code&gt;hosts&lt;/code&gt; represents the group of
servers this Playbook will refer to. &lt;code&gt;sudo&lt;/code&gt; defines whether or not we'll
run the commands using sudo. Then, in the &lt;code&gt;tasks&lt;/code&gt; section, &lt;code&gt;name&lt;/code&gt; is the
human-readable task description that appears on the command line while
the Playbook is running. Clearly then, &lt;code&gt;action&lt;/code&gt; represents the actual
task.&lt;/p&gt;
&lt;p&gt;With that complete, I can now run the Playbook at the prompt and watch
the magic happen.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible/lexandstuff&amp;gt; ansible-playbook initial.yml -u root --ask-pass
SSH password:

PLAY &lt;span class="o"&gt;[&lt;/span&gt;webservers&lt;span class="o"&gt;]&lt;/span&gt; *********************

GATHERING FACTS *********************
ok: &lt;span class="o"&gt;[&lt;/span&gt;prodweb03&lt;span class="o"&gt;]&lt;/span&gt;

TASK: &lt;span class="o"&gt;[&lt;/span&gt;create group&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)]&lt;/span&gt; *********************
ok: &lt;span class="o"&gt;[&lt;/span&gt;prodweb03&lt;span class="o"&gt;]&lt;/span&gt;

TASK: &lt;span class="o"&gt;[&lt;/span&gt;create user&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)]&lt;/span&gt; *********************
ok: &lt;span class="o"&gt;[&lt;/span&gt;prodweb03&lt;span class="o"&gt;]&lt;/span&gt;

TASK: &lt;span class="o"&gt;[&lt;/span&gt;setup authorized key&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)]&lt;/span&gt; *********************
ok: &lt;span class="o"&gt;[&lt;/span&gt;prodweb03&lt;span class="o"&gt;]&lt;/span&gt;

PLAY RECAP *********************
prodweb03                      : &lt;span class="nv"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;4    &lt;span class="nv"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0    &lt;span class="nv"&gt;unreachable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0    &lt;span class="nv"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Perhaps at some stage I expect to require more than just a single
account and user group on my production web servers. One way to handle
it, is to just list additionally actions in order.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="c1"&gt;#...&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;create admin group&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;group name=admin gid=1000 system=no&lt;/span&gt;

    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;create sshusers group&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;group name=sshusers gid=1001 system=no&lt;/span&gt;
    &lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Or, I could separate a repeatable task into a &lt;a href="http://ansible.cc/docs/playbooks.html#include-files-and-encouraging-reuse"&gt;separate file&lt;/a&gt; and call
it from within my main Playbook.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;   &lt;span class="c1"&gt;#...&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/create_user.yml user=lex group=admin full_name=&amp;#39;Lex Toumbourou&amp;#39; uid=1000&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/create_user.yml user=travis group=sshusers full_name=&amp;#39;Travis Bickle&amp;#39; uid=1001&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;include&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;tasks/create_user.yml user=jacob group=sshusers full_name=&amp;#39;Jacob Singer&amp;#39; uid=1002&lt;/span&gt;
   &lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;/etc/ansible/lexandstuff/tasks/create_user.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;create user(s)&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;user name=$user group=$group shell=/bin/bash uid=$uid&lt;/span&gt;

&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;setup authorized key(s)&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;authorized_key user=$user key=&amp;#39;$FILE(/home/$user/.ssh/id_rsa.pub)&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a name="part-4"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#part-4"&gt;Part 4: Using Templates To Setup Privileges and SSH Security&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Ansible relies on the very powerful Jinja2 engine to handle templating.
In this last part of the tutorial, I'm going to utilise templates to
create a custom sudoers file, allowing me to run commands on the remote
hosts as myself, and a customised sshd config.&lt;/p&gt;
&lt;p&gt;Firstly, I created the templates directory and wrote the custom sudoers
template. You may note that initially, I'm not taking advantage of the
templating engine at all. I could have simply used the &lt;code&gt;copy&lt;/code&gt; module to
copy the file up to my server, but this gives me a chance to extend it
later.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/templates/custom_sudo.j2&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# Members of the admin group may gain root privileges&lt;/span&gt;
&lt;span class="err"&gt;%&lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;admin ALL=(ALL) NOPASSWD:ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, I can import add the creation of &lt;code&gt;/etc/sudoers.d/custom&lt;/code&gt; into the
Playbook.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;  &lt;span class="c1"&gt;#...&lt;/span&gt;

  &lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;

    &lt;span class="c1"&gt;#...&lt;/span&gt;

    &lt;span class="c1"&gt;# ===============================================================&lt;/span&gt;
    &lt;span class="c1"&gt;# Access, security and permissions&lt;/span&gt;
    &lt;span class="c1"&gt;# ===============================================================&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;write the sudoers file&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;template src=templates/sudoers.j2 dest=/etc/sudoers.d/custom&lt;/span&gt;
                 &lt;span class="l-Scalar-Plain"&gt;owner=root group=root mode=0400&lt;/span&gt;
   &lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, for my &lt;code&gt;sshd_config&lt;/code&gt;, I created another template with placeholders
for the variables configured in the Playbook, using Jinja2's
&lt;code&gt;{{ variable_name }}&lt;/code&gt; syntax.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/templates/sshd_config.j2&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;Port {{ ssh_port }}&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;Protocol {{ ssh_protocol }}&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;#...&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;RSAAuthentication {{ ssh_rsa_authentication }}&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;PubkeyAuthentication {{ ssh_public_key_authentication }}&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And, so on.&lt;/p&gt;
&lt;p&gt;In a separate &lt;code&gt;vars&lt;/code&gt; file, I specified the variables...&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/vars/defaults.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;########################&lt;/span&gt;
&lt;span class="c1"&gt;# sshd_config settings&lt;/span&gt;
&lt;span class="c1"&gt;########################&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;ssh_port&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;22&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;ssh_protocol&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;2&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;ssh_syslog_facility&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;AUTH&lt;/span&gt;

&lt;span class="c1"&gt;#...&lt;/span&gt;

&lt;span class="c1"&gt;# Allow authentication methods&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;ssh_rsa_authentication&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;ssh_public_key_authentication&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;

&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...which were included in the Playbook using the &lt;code&gt;vars_files&lt;/code&gt; parameter.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hosts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;all&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;sudo&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;yes&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;gather_facts&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;no&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;vars_file&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;vars/defaults.yml&lt;/span&gt;

  &lt;span class="-Error"&gt; &lt;/span&gt;&lt;span class="l-Scalar-Plain"&gt;tasks&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
&lt;span class="c1"&gt;# ...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, I just call the &lt;code&gt;template&lt;/code&gt; module to create the &lt;code&gt;sshd_config&lt;/code&gt;
file.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# ...&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;write the sshd_config file&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;template src=templates/sshd_config.j2 dest=/etc/ssh/sshd_config&lt;/span&gt;
              &lt;span class="l-Scalar-Plain"&gt;owner=root group=root mode=0644&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In order for the changes to take effect, we're going to need to reload
the ssh daemon after changing the config. That can be done with a
&lt;code&gt;handler&lt;/code&gt;. A handler is a list of tasks that another task can call or
"notify" to perform after the Playbook has finished executing. So, in
the config, I've added a handler section toward the bottom which uses
the &lt;code&gt;service&lt;/code&gt; module to reload the config.&lt;/p&gt;
&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#...&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;handlers&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;reload sshd&lt;/span&gt;
      &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;service name=ssh state=reloaded&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, using the &lt;code&gt;notify&lt;/code&gt; parameter, I can call the handler after the
sshd config file is generated.&lt;/p&gt;
&lt;/p&gt;

&lt;h5&gt;/etc/ansible/lexandstuff/initial.yml&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#...&lt;/span&gt;
&lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;name&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;write the sshd_config file&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;action&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;template src=templates/sshd_config.j2 dest=/etc/ssh/sshd_config&lt;/span&gt;
          &lt;span class="l-Scalar-Plain"&gt;owner=root group=root mode=0644&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;notify&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;reload sshd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And we're done.&lt;/p&gt;
&lt;p&gt;&lt;a name="part-5"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#part-5"&gt;Part 5: Source Control&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Lastly, I put my entire repo in source control.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@desktop:/etc/ansible/lexandstuff&amp;gt; git init
Initialized empty Git repository in /etc/ansible/lexandstuff/.git/
lex@desktop:/etc/ansible/lexandstuff&amp;gt; git add .
lex@desktop:/etc/ansible/lexandstuff&amp;gt; git commit -m &lt;span class="s2"&gt;&amp;quot;First working version configures basic environment&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I then pushed it to a private repo on GitHub, which means that I have
access to them from anywhere.&lt;/p&gt;
&lt;p&gt;&lt;a name="summary"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="#summary"&gt;Summary&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In conclusion, Ansible is awesome. Straight-forward, easy,
self-documenting and, dare I say it, fun. If you're finding yourself
putting off automating configuration management because you're fearing a
steep learning curve, then Ansible is probably for you.&lt;/p&gt;</summary><category term="DevOps"></category><category term="Ansible"></category></entry><entry><title>Integrating Bootstrap with Django using Less and Fabric</title><link href="http://lextoumbourou.github.io/blog/posts/integrating-bootstrap-django-using-less-and-fabric/" rel="alternate"></link><updated>2012-11-11T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-11-11:blog/posts/integrating-bootstrap-django-using-less-and-fabric/</id><summary type="html">&lt;p&gt;

&lt;div class="intro"&gt;
It can be frustrating finding the perfect way to work with
Bootstrap. On the one hand, I want to make sites look as customised
and non-Bootstrappy as possible. On the other hand, it'd be nice to have
an easy way to pull down the updates from the main Bootstrap repo
without going through merge hell, or - god forbid - having to copy and
paste bits and pieces by hand.

&lt;/p&gt;

&lt;p&gt;I spent a day doing research into the ways other people were managing
this, and have found that people are solving the problem a lot of
different &lt;a href="https://groups.google.com/forum/?fromgroups#!topic/twitter-bootstrap/GMMmF_nHEiI"&gt;ways&lt;/a&gt;. None of which seemed satisfyingly "perfect". Though,
I couldn't quite put my finger on what perfect should be. So, I decided
I would set myself some simple guidelines for exactly what I wanted out
of my Bootstrap experience and work out a solution to each.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;The strategy I've come up with is probably not 100% ideal but then
neither is your face (joking, you're beautiful). I also plan to update
this post if I come up with a better way of doing it. Feel free to let
me know in the comments if you've got a better way of doing it. Anyway,
on to...&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;The Requirements&lt;/h3&gt;
&lt;p&gt;I want to be able to...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Custom Bootstrap classes and style variables using Less.&lt;/li&gt;
&lt;li&gt;Easily pull updates from the main Bootstrap repo without overwriting
    any of my custom variables.&lt;/li&gt;
&lt;li&gt;Ensure my Less files are compiled server-side in production but
    client-side during development, so I can make changes and see
    results immediately.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr /&gt;
&lt;h3&gt;Requirement 1: Customise base Bootstrap classes and styles using Less&lt;/h3&gt;
&lt;p&gt;With a little help from my &lt;a href="http://stackoverflow.com/questions/10451317/twitter-bootstrap-customization-best-practices"&gt;friends&lt;/a&gt;, I decided upon this solution. I
would take the &lt;code&gt;less&lt;/code&gt; directory out of the Bootstrap repo and put it in
my static files directory. Then, I created my own &lt;code&gt;variables.less&lt;/code&gt; file
which would start its life as a copy of the one provided by Bootstrap
but allow me to update and edit variables easily. Additionally, I have a
&lt;code&gt;custom.less&lt;/code&gt; file that references the variables file and allows me to
overwrite Bootstrap classes and so forth. Let me break it down for
ya'll.&lt;/p&gt;
&lt;p&gt;1. Firstly, in my Django project, I've setup a &lt;code&gt;less&lt;/code&gt; directory in the
&lt;code&gt;templates&lt;/code&gt; directory of my project:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;project/templates/static
lex@server:~/project/templates/static/&amp;gt; mkdir less
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2. Then, I cloned the Bootstrap repo and copied the &lt;code&gt;less&lt;/code&gt; directory
into my project's directory, renaming it to &lt;code&gt;bootstrap&lt;/code&gt;. Like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/project/templates/static/&amp;gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/src
lex@server:~/src&amp;gt; git clone git://github.com/twitter/bootstrap.git
lex@server:~/src&amp;gt; cp bootstrap/less ~/project/templates/static/less/bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3. Next, at the root of my &lt;code&gt;less&lt;/code&gt; directory, following the
&lt;a href="http://stackoverflow.com/questions/10451317/twitter-bootstrap-customization-best-practices"&gt;StackOverflow post&lt;/a&gt;, I created a &lt;code&gt;custom.less&lt;/code&gt; file which
references the to the Bootstrap modules in the copied subdirectory and
created the updated &lt;code&gt;variables.less&lt;/code&gt; files as mentioned earlier. So, it
looks something like this:&lt;/p&gt;
&lt;h5&gt;project/templates/static/less/custom.less&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;//...&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;CSS&lt;/span&gt; &lt;span class="nt"&gt;Reset&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/reset.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Core&lt;/span&gt; &lt;span class="nt"&gt;variables&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;mixins&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;variables.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Modify&lt;/span&gt; &lt;span class="nt"&gt;this&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;custom&lt;/span&gt; &lt;span class="nt"&gt;colors&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;font-sizes&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;etc&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/mixins.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Grid&lt;/span&gt; &lt;span class="nt"&gt;system&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;page&lt;/span&gt; &lt;span class="nt"&gt;structure&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/scaffolding.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/grid.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/layouts.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="o"&gt;//...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I added my CSS overrides in the &lt;code&gt;custom.less&lt;/code&gt; file immediately after
the import statements.&lt;/p&gt;
&lt;h5&gt;project/templates/static/less/custom.less&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Utility&lt;/span&gt; &lt;span class="nt"&gt;classes&lt;/span&gt;
&lt;span class="k"&gt;@import&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bootstrap/utilities.less&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Has&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;be&lt;/span&gt; &lt;span class="nt"&gt;last&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;override&lt;/span&gt; &lt;span class="nt"&gt;when&lt;/span&gt; &lt;span class="nt"&gt;necessary&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Brand&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nt"&gt;website&lt;/span&gt; &lt;span class="nt"&gt;or&lt;/span&gt; &lt;span class="nt"&gt;project&lt;/span&gt; &lt;span class="nt"&gt;name&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;-------------------------&lt;/span&gt;
&lt;span class="nc"&gt;.navbar&lt;/span&gt; &lt;span class="nc"&gt;.brand&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;display&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;block&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Vertically&lt;/span&gt; &lt;span class="k"&gt;center&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;text&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;navbarHeight&lt;/span&gt;
    &lt;span class="k"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;navbarHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;baseLineHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="m"&gt;20px&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;navbarHeight&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;baseLineHeight&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-20px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;negative&lt;/span&gt; &lt;span class="n"&gt;indent&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;left&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;align&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;text&lt;/span&gt; &lt;span class="n"&gt;down&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="k"&gt;page&lt;/span&gt;
    &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;40px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;font-weight&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;letter-spacing&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;-2px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;navbarBrandColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="o"&gt;&amp;amp;:&lt;/span&gt;&lt;span class="n"&gt;hover&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
       &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;darken&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;navbarBrandColor&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nt"&gt;Allow&lt;/span&gt; &lt;span class="nt"&gt;us&lt;/span&gt; &lt;span class="nt"&gt;to&lt;/span&gt; &lt;span class="nt"&gt;put&lt;/span&gt; &lt;span class="nt"&gt;symbols&lt;/span&gt; &lt;span class="nt"&gt;and&lt;/span&gt; &lt;span class="nt"&gt;text&lt;/span&gt; &lt;span class="nt"&gt;within&lt;/span&gt; &lt;span class="nt"&gt;the&lt;/span&gt; &lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="nt"&gt;field&lt;/span&gt; &lt;span class="nt"&gt;for&lt;/span&gt; &lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="nt"&gt;cleaner&lt;/span&gt; &lt;span class="nt"&gt;look&lt;/span&gt;
&lt;span class="nc"&gt;.input-append&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="nc"&gt;.input-prepend&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;margin-bottom&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;5px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nb"&gt;white&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="k"&gt;collapse&lt;/span&gt; &lt;span class="n"&gt;hack&lt;/span&gt;
    &lt;span class="k"&gt;white-space&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;nowrap&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Prevent&lt;/span&gt; &lt;span class="n"&gt;span&lt;/span&gt; &lt;span class="n"&gt;and&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;separating&lt;/span&gt;

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;Reset&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="nb"&gt;white&lt;/span&gt; &lt;span class="n"&gt;space&lt;/span&gt; &lt;span class="k"&gt;collapse&lt;/span&gt; &lt;span class="n"&gt;hack&lt;/span&gt;
    &lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;select&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;uneditable&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dropdown&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="err"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;font-size&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;baseFontSize&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nt"&gt;input&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="nt"&gt;select&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
  &lt;span class="nc"&gt;.active&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;border-color&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="m"&gt;#ccc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4. Finally, to ensure that all works, I can update my &lt;code&gt;base.html&lt;/code&gt;
parent template and put a reference to my new less file. I should be
able to update less values and the page should be dynamically updated.
But first, I need to install the less js file which can be found
&lt;a href="http://lesscss.org/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;project/templates/static/js/
lex@server:~/project/templates/static/js/&amp;gt; wget http://cloud.github.com/downloads/cloudhead/less.js/less-1.3.1.min.js
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now client side I can compile the less file for testing by adding the
following lines of html.&lt;/p&gt;
&lt;h5&gt;project/templates/base.html&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet/less&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{STATIC_URL}}less/theme.less&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{STATIC_URL}}js/less-1.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And that works! So that's requirement 1 complete. On to the second.&lt;/p&gt;
&lt;h3&gt;Requirement 2: Easily pull updates from the main Bootstrap repo without overwriting any of my custom variables&lt;/h3&gt;
&lt;p&gt;The simplest way to handle any maintenance task in Python projects, is
usually to add a function to a project's &lt;a href="http://fabfile.org"&gt;Fabric&lt;/a&gt; script. Here, I
added a function called &lt;code&gt;update_bootstrap()&lt;/code&gt; which takes an option &lt;a href="http://git-scm.com/book/en/Git-Basics-Tagging"&gt;Git
tag&lt;/a&gt; argument, and pulls down the latest Bootstrap updates, checking
out to the tagged version, if specified, then copying the &lt;strong&gt;less&lt;/strong&gt;
directory into my project as specified in Requirement 1.&lt;/p&gt;
&lt;p&gt;If you don't have a &lt;code&gt;fabfile.py&lt;/code&gt; or you are new to Fabric, you're
welcome to skip this step. However, if that's the case, then now is a
good time to get your learn on. Fabric is amazing.&lt;/p&gt;
&lt;h5&gt;project/fabfile&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.api&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;fabric.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;local&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hosts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;update_bootstrap&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Update Bootstrap files to tag version. If a tag isn&amp;#39;t specified just&lt;/span&gt;
&lt;span class="sd"&gt;    get latest version.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;repo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/twitter/bootstrap&amp;#39;&lt;/span&gt;
    &lt;span class="n"&gt;local_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                             &lt;span class="s"&gt;&amp;#39;templates/static/less/bootstrap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;warn_only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# Create the source directory if it doesn&amp;#39;t exist&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~/src/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;mkdir ~/src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Clone the Bootstrap project if we don&amp;#39;t have a local copy of the repo&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~/src/bootstrap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cd ~/src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
                &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;git clone {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repo&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

        &lt;span class="c"&gt;# Pull down updates&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;cd&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;~/src/bootstrap&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;git pull origin master&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="c"&gt;# Checkout to tag if specified&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;git checkout {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="c"&gt;# Remove the project&amp;#39;s Bootstrap files&lt;/span&gt;
            &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;rm -vR {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

            &lt;span class="c"&gt;# Copy the updated files into the project&lt;/span&gt;
            &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;cp -vfR less {0}&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then to run it...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/&amp;gt; fab &lt;span class="nb"&gt;local &lt;/span&gt;update_bootstrap
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Requirement 3: Less files are compiled server-side in production but client-side during development&lt;/h3&gt;
&lt;p&gt;Nothing kills the fun of messing around with a page's design more than
having to compile CSS after every fiddle. There's a couple of choices
here. I could either run a script like &lt;a href="https://gist.github.com/1242040"&gt;this&lt;/a&gt; that watches for updates
to less files and automatically compiles them, but it's a bit of a
hassle. Instead, I went with the idea proposed by &lt;a href="http://www.caktusgroup.com/blog/2012/03/05/using-less-django/"&gt;Julia Elman&lt;/a&gt;, using
the Django Compressor precompiler.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/jezdez/django_compressor"&gt;Django Compressor&lt;/a&gt; is a Django app that allows you to compress linked
and inline JavaScript or CSS into a single cached file. Additionally,
and most importantly in this context, it allows a person to specify
precompilers of their choice. In this example, I'm going to use the Less
compiler, &lt;code&gt;lessc&lt;/code&gt;...&lt;/p&gt;
&lt;p&gt;1. Firstly, I ensured I have the Less compiler installed, which should
be done via &lt;strong&gt;npm&lt;/strong&gt;. I included the step to install &lt;strong&gt;npm&lt;/strong&gt; for
completeness.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/&amp;gt; sudo apt-get install npm
lex@server:~/&amp;gt; sudo npm install -g less
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2. Next, I installed django-compressor via Pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/&amp;gt; sudo pip install django-compressor
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;3. Then, I added django-compressor to my &lt;code&gt;INSTALLED_APPS&lt;/code&gt; tuple in the
&lt;code&gt;settings.py&lt;/code&gt; file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;compressor&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4. After, I specified Less as a precompiler by adding a
&lt;code&gt;COMPRESS_PRECOMPILERS&lt;/code&gt; tuple in the same file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="n"&gt;COMPRESS_PRECOMPILERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;text/less&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;lessc {infile} {outfile}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;5. Since I am using Django's staticfiles contrib app, I have to add
Django Compressor’s file finder to the &lt;code&gt;STATICFILES_FINDERS&lt;/code&gt; tuple.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;STATICFILES_FINDERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;compressor.finders.CompressorFinder&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6. Now, in my parent template, I configured it such that, if DEBUG was
enabled (which definitely should only be enabled in dev), then I would
compile the CSS client-side, however, in production we would use
&lt;code&gt;django-compressor&lt;/code&gt;. Like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load compress %}
&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;html&lt;/span&gt; &lt;span class="na"&gt;lang=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
            {% if debug %}
            &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet/less&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ STATIC_URL }}less/theme.less&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;src=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ STATIC_URL }}js/less-1.3.1.min.js&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
            {% else %}
            {% compress css %}
            &lt;span class="nt"&gt;&amp;lt;link&lt;/span&gt; &lt;span class="na"&gt;rel=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/less&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;media=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;all&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ STATIC_URL }}less/theme.less&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
            {% endcompress %}
            {% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And now, we should be good to go.&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>Implementing and customising Lazy Signup in Django</title><link href="http://lextoumbourou.github.io/blog/posts/implementing-and-customising-lazy-signup-in-django/" rel="alternate"></link><updated>2012-10-21T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-10-21:blog/posts/implementing-and-customising-lazy-signup-in-django/</id><summary type="html">&lt;p&gt;

&lt;div class="intro"&gt;
In an internet saturated with new things, if you expect anybody to give
your new web application a glance, then you'd better make the barrier to
entry pretty damn low. Hence, Lazy Signup. If you're new to Lazy Sign
up, then this &lt;a href="http://www.youtube.com/watch?v=uBT2niL2jKM"&gt;video&lt;/a&gt; should help.

&lt;/p&gt;

&lt;p&gt;For Django users, &lt;a href="https://github.com/danfairs/"&gt;Dan Fair&lt;/a&gt;'s &lt;a href="https://github.com/danfairs/django-lazysignup"&gt;django-lazysignup&lt;/a&gt; is "a package
designed to allow users to interact with a site as if they were
authenticated users, but without signing up."&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;It works by creating cookie-bound temporary accounts for new users,
allowing them to interact with the site as if they were registered.
Then, when they're ready to sign up, the package provides an overridable
view that allows for a "conversion" to a real account.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;In this short tutorial, I'll show you how I setup &lt;em&gt;django-lazysignup&lt;/em&gt;
for a simple to-do app I'm putting together that allows you to only
create &lt;a href="http://www.justtwotasks.com"&gt;two tasks per day&lt;/a&gt; (shut up, my mum thinks it's a good idea).
&lt;/div&gt;&lt;/p&gt;
&lt;h3&gt;The setup&lt;/h3&gt;
&lt;/p&gt;

&lt;p&gt;My Django project had just one app called &lt;em&gt;tasks&lt;/em&gt; which provided an
Ajax-enabled template where the users could add, edit and complete
tasks. On the file system, it looks a little something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/twotasks&amp;gt; tree -I &lt;span class="s2"&gt;&amp;quot;*pyc&amp;quot;&lt;/span&gt; -A
.
+-- __init__.py
+-- settings.py
+-- tasks
¦   +-- __init__.py
¦   +-- models.py
¦   +-- templates
¦   ¦   +-- tasks.html
¦   +-- tests.py
¦   +-- urls.py
¦   +-- views.py
+-- templates
¦   +-- parent.html
+-- urls.py
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Installing and configuring django-lazysignup&lt;/h3&gt;
&lt;p&gt;As per the &lt;a href="http://django-lazysignup.readthedocs.org/"&gt;docs&lt;/a&gt;, &lt;em&gt;django-lazysignup&lt;/em&gt; can be installed with Pip.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/twotasks&amp;gt; pip install django-lazysignup
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, I added &lt;em&gt;lazysignup&lt;/em&gt; to the &lt;em&gt;INSTALLED_APPS&lt;/em&gt; section of my
settings.py file. Also, I ensured that&lt;em&gt;django.contrib.auth&lt;/em&gt; was
installed so I can use Django's built-in user authentication system.&lt;/p&gt;
&lt;p&gt;Lastly, I added the &lt;em&gt;lazysignup&lt;/em&gt; authentication backend to the
&lt;em&gt;AUTHENTICATION_BACKENDS&lt;/em&gt; section.&lt;/p&gt;
&lt;h5&gt;settings.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#...&lt;/span&gt;

&lt;span class="n"&gt;INSTALLED_APPS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.auth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.contenttypes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.sessions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.sites&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.messages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.staticfiles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;lazysignup&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;justtwotasks.tasks&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;:::&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="n"&gt;AUTHENTICATION_BACKENDS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;django.contrib.auth.backends.ModelBackend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;lazysignup.backends.LazySignupBackend&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, I ran &lt;em&gt;syncdb&lt;/em&gt; to setup the tables &lt;em&gt;lazysignup&lt;/em&gt; uses.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/twotasks&amp;gt; python manage.py syncdb
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which runs these queries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/twotasks&amp;gt; python manage.py sqlall lazysignup
BEGIN;
CREATE TABLE &lt;span class="s2"&gt;&amp;quot;lazysignup_lazyuser&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt; serial NOT NULL PRIMARY KEY,
    &lt;span class="s2"&gt;&amp;quot;user_id&amp;quot;&lt;/span&gt; integer NOT NULL UNIQUE REFERENCES &lt;span class="s2"&gt;&amp;quot;auth_user&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; DEFERRABLE INITIALLY DEFERRED,
    &lt;span class="s2"&gt;&amp;quot;created&amp;quot;&lt;/span&gt; timestamp with &lt;span class="nb"&gt;time &lt;/span&gt;zone NOT NULL
&lt;span class="o"&gt;)&lt;/span&gt;
;
CREATE INDEX &lt;span class="s2"&gt;&amp;quot;lazysignup_lazyuser_created&amp;quot;&lt;/span&gt; ON &lt;span class="s2"&gt;&amp;quot;lazysignup_lazyuser&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;created&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;;
COMMIT;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, I created a route to via the &lt;em&gt;/convert&lt;/em&gt; url to the lazysignup
views in my &lt;em&gt;URLconf&lt;/em&gt;.&lt;/p&gt;
&lt;h5&gt;urls.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; patterns&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
    &lt;span class="c"&gt;#...&lt;/span&gt;
    url&lt;span class="o"&gt;(&lt;/span&gt;r&lt;span class="s1"&gt;&amp;#39;^convert&amp;#39;&lt;/span&gt;, include&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;lazysignup.urls&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt;,
    &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Utilising django-lazysignup&lt;/h3&gt;
&lt;h4&gt;Views&lt;/h4&gt;
&lt;p&gt;When a user is routed to your view wrapped in the &lt;em&gt;@allow_lazy_user&lt;/em&gt;
decorator, a temporary user account is created for them if they aren't
already signed in.&lt;/p&gt;
&lt;p&gt;In my app, I've got three views, one for displaying the main page, the
other two for handling task related functionality like editing tasks,
deleting tasks etc. All of them should be accessible to the lazy user,
so I applied to decorator to each.&lt;/p&gt;
&lt;h5&gt;tasks/views.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;lazysignup.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;allow_lazy_user&lt;/span&gt;

&lt;span class="nd"&gt;@allow_lazy_user&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Handles displaying the view to the user&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="c"&gt;#...&lt;/span&gt;

&lt;span class="nd"&gt;@allow_lazy_user&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_or_update_task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Handles adding a new task&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;#...&lt;/span&gt;

&lt;span class="nd"&gt;@allow_lazy_user&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;delete_task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Handles deleting tasks&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;#..&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if I access one of those views by hitting the main homepage, I can
see in my database that a user account is automatically generated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;lex&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;twotasks&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;dbshell&lt;/span&gt;

&lt;span class="n"&gt;justtwotasks&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date_joined&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;auth_user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;            &lt;span class="n"&gt;username&lt;/span&gt;            &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="n"&gt;date_joined&lt;/span&gt;
&lt;span class="c1"&gt;----+--------------------------------+-------------------------------&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;dced705135d642dd8079c945276dea&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;640585&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;lex&lt;/span&gt;                            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;243674&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And, we can see the user is defined as a &lt;em&gt;lazyuser&lt;/em&gt; in the
&lt;em&gt;lazysignup_lazyuser&lt;/em&gt; table too.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;justtwotasks&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;lazysignup_lazyuser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;created&lt;/span&gt;
&lt;span class="c1"&gt;----+---------+------------------------------&lt;/span&gt;
 &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;65818&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;row&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Templates&lt;/h4&gt;
&lt;p&gt;In my parent template, I can detect whether the user is a lazy user and
provide a &lt;em&gt;Sign up&lt;/em&gt; or &lt;em&gt;Login&lt;/em&gt; button if they are, or information about
the logged in account if they're not by utilising the &lt;em&gt;is_lazy_user&lt;/em&gt;
template filter. This requires importing the &lt;em&gt;lazysignup&lt;/em&gt; template tags.&lt;/p&gt;
&lt;p&gt;Initially, the &lt;em&gt;/convert&lt;/em&gt; page will return a &lt;em&gt;TemplateDoesNotExist&lt;/em&gt;
exception. I'll fix that next.&lt;/p&gt;
&lt;h5&gt;templates/parent.html&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% load i18n lazysignup_tags %}

#...

&lt;span class="nt"&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
{% if not user|is_lazy_user %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Logged in as &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/accounts/profile&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;{{ user.username }}&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/accounts/logout&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sign out&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{% else %}
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/convert&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Register&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/accounts/login/&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Sign in&lt;span class="nt"&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Setting up the convert page&lt;/h3&gt;
&lt;p&gt;The /convert page is where the user can convert their temporary account
to the real thing. In my &lt;em&gt;templates&lt;/em&gt; folder, I copied the &lt;em&gt;lazysignup&lt;/em&gt;
template directory from the &lt;em&gt;django-lazysignup&lt;/em&gt; project.&lt;/p&gt;
&lt;p&gt;To do it, I cloned a local copy of the repo, but you could just grab the
files from &lt;a href="https://github.com/danfairs/django-lazysignup/tree/master/lazysignup/templates"&gt;Github&lt;/a&gt; or just simply role your own templates using my
example as a guide.&lt;/p&gt;
&lt;p&gt;I'm going to customize the template to inherit from my base template,
but obviously you can make them look sexy however you want.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/src&amp;gt; git clone git://github.com/danfairs/django-lazysignup.git 
lex@server:~/src&amp;gt; &lt;span class="nb"&gt;cd &lt;/span&gt;django-lazysignup/lazysignup/templates/
lex@server:~/src/django-lazysignup/lazysignup/templates/&amp;gt; cp -R lazysignup ~/twotasks/templates/
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;templates/lazysignup/convert.html&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{% extends &amp;quot;parent.html&amp;quot; %}
{% load i18n %}

{% block title %}
    Register
{% endblock %}

{% block content %}
    &lt;span class="nt"&gt;&amp;lt;form&lt;/span&gt; &lt;span class="na"&gt;method=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;post&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;action=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{% url lazysignup_convert %}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        {{ form.as_p }}
        {% csrf_token %}
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;hidden&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;redirect_to&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{{ redirect_to }}&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;&amp;lt;input&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;submit&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;{% trans &amp;quot;&lt;/span&gt;&lt;span class="na"&gt;Submit&lt;/span&gt;&lt;span class="err"&gt;&amp;quot;&lt;/span&gt; &lt;span class="err"&gt;%}&amp;quot;&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;/form&amp;gt;&lt;/span&gt;
{% endblock %}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, if I convert our account, I can see the username update in the
&lt;em&gt;auth_user&lt;/em&gt; table and disappear from the &lt;em&gt;lazyuser&lt;/em&gt; table.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;lex&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;twotasks&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;manage&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;dbshell&lt;/span&gt;
&lt;span class="n"&gt;justtwotasks&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date_joined&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="n"&gt;auth_user&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;      &lt;span class="n"&gt;username&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt;          &lt;span class="n"&gt;date_joined&lt;/span&gt;
&lt;span class="c1"&gt;----+--------------------+-------------------------------&lt;/span&gt;
  &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;i_just_set_this_up&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt; &lt;span class="mi"&gt;22&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;58&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;640585&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;
  &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;lex&lt;/span&gt;                &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;34&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;243674&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;justtwotasks&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;lazysignup_lazyuser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
 &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;
&lt;span class="c1"&gt;----+---------+---------&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;rows&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Customising the convert form&lt;/h3&gt;
&lt;p&gt;So, now that's working rather nicely. I can create tasks, close my
browser and, providing my session is still active, access the tasks.&lt;/p&gt;
&lt;p&gt;Then, when I'm ready, I can create an account and it's all gravy.&lt;/p&gt;
&lt;p&gt;But, what happens if I want to capture more than just username and
password in the signup process?&lt;/p&gt;
&lt;p&gt;Perhaps, I would also like to capture the user's email address, or full
name etc.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;lazysignup&lt;/em&gt; lets you pass in a custom form to the &lt;em&gt;convert&lt;/em&gt; view,
provided it matches the specifications listed &lt;a href="http://django-lazysignup.readthedocs.org/en/latest/usage.html#the-converted-signal"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My example extends the &lt;em&gt;UserCreationForm&lt;/em&gt; class adding email,
first_name and last_name fields.&lt;/p&gt;
&lt;h5&gt;forms.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib.auth.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;UserCreationForm&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.translation&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ugettext_lazy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TwoTasksUserCreationForm&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserCreationForm&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Class passed into lazysignup view to override default and allow&lt;/span&gt;
&lt;span class="sd"&gt;    for email address username&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EmailField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;help_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Required. A valid email address.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;error_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;That doesn&amp;#39;t appear to be a valid email address.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;

    &lt;span class="n"&gt;first_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;First Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;help_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Optional.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;error_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;That doesn&amp;#39;t appear to be a valid name.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;

    &lt;span class="n"&gt;last_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;forms&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Last Name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;help_text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Optional.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;error_messages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;#39;invalid&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;That doesn&amp;#39;t appear to be a valid name.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)})&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;password1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;password2&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;email&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="s"&gt;&amp;quot;first_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;last_name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_credentials&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;username&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password1&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now in my &lt;em&gt;URLconf&lt;/em&gt;, I can pass in my freshly created form to the
convert view using the &lt;em&gt;form_class&lt;/em&gt; parameter.&lt;/p&gt;
&lt;h5&gt;urls.py&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;justtwotasks.forms&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;TwoTasksUserCreationForm&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;

&lt;span class="n"&gt;urlpatterns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;r&amp;#39;^convert&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;lazysignup.urls&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;form_class&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Form&lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
    &lt;span class="c"&gt;#...&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;That's a wrap.&lt;/h3&gt;
&lt;p&gt;Hopefully that helped you get up and running with &lt;em&gt;django-lazysignup&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Feel free to &lt;a href="mailto:lextoumbourou@gmail.com"&gt;let me know&lt;/a&gt; if there's any issues with my tutorial.&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry><entry><title>Dynamically loading modules and classes in Python</title><link href="http://lextoumbourou.github.io/blog/posts/dynamically-loading-modules-and-classes-in-python/" rel="alternate"></link><updated>2012-10-12T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-10-12:blog/posts/dynamically-loading-modules-and-classes-in-python/</id><summary type="html">&lt;/p&gt;

&lt;div class="intro"&gt;
There was once a time, I remember, many, many minutes ago, where I
wished to implement a rudimentary plugin engine for a little
application. In it, there would be a plugin directory where Python
modules could be copied and then dynamically loaded on application
start.
&lt;/div&gt;

&lt;h3&gt;The setup&lt;/h3&gt;
&lt;p&gt;The expectations for plugins would be that the class's name matches the
file's name, PascalCased after removing the &lt;em&gt;plugin_&lt;/em&gt; prefix. For
example, for module &lt;em&gt;plugin_do_something.py&lt;/em&gt;, the class name will be
&lt;em&gt;DoSomething()&lt;/em&gt;. So, the setup should look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/my_app&amp;gt; ls -l plugins/
total 3
-rw-r--r-- 1 lex lex   0 Oct 11 13:35 __init__.py
-rw-r--r-- 1 lex lex  55 Oct 11 13:47 plugin_test.py
-rw-r--r-- 1 lex lex  57 Oct 11 13:47 plugin_test_2.py
lex@server:~/my_app&amp;gt; cat plugins/plugin_test.py
class Test&lt;span class="o"&gt;()&lt;/span&gt;:
    def run&lt;span class="o"&gt;(&lt;/span&gt;self&lt;span class="o"&gt;)&lt;/span&gt;:
        print &lt;span class="s2"&gt;&amp;quot;Inside the Test class!&amp;quot;&lt;/span&gt;
lex@server:~/my_app&amp;gt; cat plugins/plugin_test_2.py
class Test2&lt;span class="o"&gt;()&lt;/span&gt;:
    def run&lt;span class="o"&gt;(&lt;/span&gt;self&lt;span class="o"&gt;)&lt;/span&gt;:
        print &lt;span class="s2"&gt;&amp;quot;Inside the Test2 class!&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Iterating through modules for fun and profit&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://docs.python.org/library/pkgutil.html"&gt;pkgutil&lt;/a&gt; package includes a function called &lt;em&gt;iter_modules&lt;/em&gt;,
which allows for iterating through a list of modules in a package
(usually, a directory with a &lt;em&gt;__init__.py&lt;/em&gt; file in it.)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;iter_modules&lt;/em&gt; takes in a list of paths (and, additionally, a prefix to
append to each module) and yields a list of tuples containing a
&lt;a href="http://www.python.org/dev/peps/pep-0302/"&gt;loader&lt;/a&gt;, the module name and an &lt;em&gt;ispkg&lt;/em&gt; bool. So, your code could
look something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pkgutil&lt;/span&gt;
&lt;span class="n"&gt;modules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pkgutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter_modules&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;plugins&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ispkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which should run something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/my_app&amp;gt; python dynamic_loader.py
plugin_test
plugin_test_2
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Determining the class name&lt;/h3&gt;
&lt;p&gt;Now that I have the module names, I can determine the class names. Since
we know the format the class should be in, we can get the class name
with a function like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_class_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return the class name from a plugin name&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="c"&gt;# Split on the _ and ignore the 1st word plugin&lt;/span&gt;
    &lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c"&gt;# Capitalise the first letter of each word and add to string&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Importing the modules and instantiating the classes&lt;/h3&gt;
&lt;p&gt;Utilising the [__import__][] function, whose purpose is to "import a
module whose name is only known at runtime", we can dynamically load the
module. Then, we can call the &lt;a href="http://docs.python.org/library/functions.html#getattr"&gt;getattr&lt;/a&gt; function to create a reference
to a class, which we use to instantiate an instance. In other words,
this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;loaded_mod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;__import__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fromlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="c"&gt;# Get the class&amp;#39;s name&lt;/span&gt;
&lt;span class="n"&gt;class_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_class_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Load it from imported module&lt;/span&gt;
&lt;span class="n"&gt;loaded_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loaded_mod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Create an instance of it&lt;/span&gt;
&lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loaded_class&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Putting it all together&lt;/h3&gt;
&lt;p&gt;Finally, we put it all together and call the &lt;em&gt;run()&lt;/em&gt; method that I
specified in each class.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pkgutil&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_class_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Return the class name from a plugin name&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="c"&gt;# Split on the _ and ignore the 1st word plugin&lt;/span&gt;
    &lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;_&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;

    &lt;span class="c"&gt;# Capitalise the first letter of each word and add to string&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;

&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__file__&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;plugins&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;modules&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pkgutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter_modules&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ispkg&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="c"&gt;# Ensure that module isn&amp;#39;t already loaded&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;mod_name&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# Import module&lt;/span&gt;
        &lt;span class="n"&gt;loaded_mod&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;__import__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;fromlist&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="c"&gt;# Load class from imported module&lt;/span&gt;
        &lt;span class="n"&gt;class_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_class_name&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mod_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;loaded_class&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;loaded_mod&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;class_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Create an instance of the class&lt;/span&gt;
        &lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;loaded_class&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And, now to profit.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lex@server:~/my_app&amp;gt; python dynamic_loader.py
Inside the Test class!
Inside the Test2 class!
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Following me on Twitter&lt;/h3&gt;
&lt;p&gt;While you're here, you might as well follow me on &lt;a href="http://twitter.com/lexandstuff"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>New XBMC plugins: ThisWeekIn.com &amp; TheNewBoston</title><link href="http://lextoumbourou.github.io/blog/posts/new-xbmc-plugins-thisweekincom-thenewboston/" rel="alternate"></link><updated>2012-08-09T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-08-09:blog/posts/new-xbmc-plugins-thisweekincom-thenewboston/</id><summary type="html">&lt;/p&gt;

&lt;div class="intro"&gt;
And *lo*, the Lord said let them watch videos from [This Week In
Startups][] and [The New Boston][] in XBMC, and so it was.
&lt;/div&gt;

&lt;h3&gt;This Week In&lt;/h3&gt;
&lt;p&gt;(from their website)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;ThisWeekIn&lt;/strong&gt;, Inc. is a web television network covering
a wide variety of topics from tech to entertainment. Produced out of our
Santa Monica studio, our web shows feature guest experts, founders,
movie stars, comedians, technologists and CEO’s — all keeping you up to
speed on what’s happening this week with a fast and funny style.
Informative and entertaining, ThisWeekIn is the place for whatever your
interests may be.&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;The New Boston&lt;/h3&gt;
&lt;p&gt;(from their website)&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Welcome to TheNewBoston, the ultimate source for free video tutorials
on the internet! Here you can find all of TheNewBoston Tutorials
organized in an orderly fashion in the Tutorials Section of the
website.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;And then what?&lt;/h2&gt;
&lt;p&gt;The plugins are available via the official repo. You install them like
this.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://lexandstuff.com/static/images/articles/thisweekin_addons.png" /&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://lexandstuff.com/static/images/articles/thisweekin_getmore.png" /&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://lexandstuff.com/static/images/articles/thisweekin_find.png" /&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;And then you watch them like this.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="http://lexandstuff.com/static/images/articles/thisweekin_example.png" /&gt;&lt;/p&gt;
&lt;h2&gt;Great! Is it also possible to follow you on Twitter?&lt;/h2&gt;
&lt;/p&gt;

&lt;p&gt;Yes! Funny you should mention it. I was just going to put a link
&lt;a href="https://twitter.com/lexandstuff"&gt;here.&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;Goodnight, my friends.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Introducing GiantDwarf</title><link href="http://lextoumbourou.github.io/blog/posts/introducing-giantdwarf/" rel="alternate"></link><updated>2012-07-31T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-07-31:blog/posts/introducing-giantdwarf/</id><summary type="html">&lt;p&gt;I had a couple of hours (somewhat) free this morning so I put together a
little &lt;a href="http://campfirenow.com/"&gt;Campfire&lt;/a&gt; bot for &lt;a href="http://www.nagios.org/"&gt;Nagios&lt;/a&gt;. Nothing too fancy, the dwarf
just scrapes the notification page using &lt;strong&gt;urllib2&lt;/strong&gt; and
&lt;strong&gt;BeautifulSoup&lt;/strong&gt;, and tells us what's going on via the &lt;a href="https://github.com/37signals/campfire-api"&gt;Campfire API&lt;/a&gt;
wrapper, &lt;a href="https://github.com/mariano/pyfire"&gt;PyFire&lt;/a&gt;. I used PyFire over &lt;a href="https://github.com/rhymes/pinder"&gt;Pinder&lt;/a&gt; because it uses
&lt;strong&gt;urllib2&lt;/strong&gt; as its connection handler, which seems to handle proxy
servers better than &lt;strong&gt;httplib2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;GiantDwarf warns us when bad things are about to happen...&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="/images/giant_dwarf_warning.png" /&gt;&lt;/p&gt;
&lt;p&gt;And tells us when they do...&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="/images/giant_dwarf_critical.png" /&gt;&lt;/p&gt;
&lt;p&gt;He knows when our servers break too...&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="/images/giant_dwarf_fail.png" /&gt;&lt;/p&gt;
&lt;p&gt;But it's okay because we're good at fixing them...&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;img alt="image" src="/images/giant_dwarf_ok.png" /&gt;&lt;/p&gt;
&lt;p&gt;More at &lt;a href="https://github.com/lextoumbourou/GiantDwarf"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary><category term="Python"></category><category term="DevOps"></category></entry><entry><title>RSA Animate XBMC Plugin</title><link href="http://lextoumbourou.github.io/blog/posts/rsa-animate-xbmc-plugin/" rel="alternate"></link><updated>2012-05-20T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-05-20:blog/posts/rsa-animate-xbmc-plugin/</id><summary type="html">&lt;/p&gt;

&lt;div class="intro"&gt;
Here's another mini XBMC plugin I've recently developed that allows you
to watch videos from &lt;a href="http://comment.rsablogs.org.uk/videos/"&gt;RSA Animate&lt;/a&gt; on XBMC.
&lt;/div&gt;

&lt;/p&gt;

&lt;h3&gt;RSA&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;The RSA (Royal Society for the encouragement of Arts, Manufactures and Commerce) describes itself as "an enlightenment organisation committed to finding innovative practical solutions to today's social challenges. Through its ideas, research and 27,000-strong Fellowship it seeks to understand and enhance human capability so we can close the gap between today's reality and people's hopes for a better world."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If you haven't seen a talk animated by RSA, now is a good time to
&lt;a href="http://www.youtube.com/watch?feature=player_embedded&amp;amp;v=u6XAPnuFjJc"&gt;start&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;

&lt;h3&gt;The Plugin&lt;/h3&gt;
&lt;/p&gt;

&lt;p&gt;The plugin itself is very simple. It utilises &lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt; to parse
the HTML scraped from the RSA website, and the video content is
collected with a couple of lines.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;scrape_site&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Scrape the RSA Animate Video site and&lt;/span&gt;
&lt;span class="sd"&gt;    return an array of dictionaries&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="n"&gt;soup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="c"&gt;# All the H3s on the page appear to be video titles, let get the title string from each one&lt;/span&gt;
    &lt;span class="n"&gt;posts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;soup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;findAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;post&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# Clean titles&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;
        &lt;span class="c"&gt;# Remove the unneccessary prefix&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;re&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sub&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;RSA Animate&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c"&gt;# Remove white space&lt;/span&gt;
        &lt;span class="n"&gt;title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Get the dates&lt;/span&gt;
        &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;postmetadata&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;span&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;alignleft&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c"&gt;# Get the Youtube URLs&lt;/span&gt;
        &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;object&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;embed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;src&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="n"&gt;final_title&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{0} ({1})&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;final_title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
             &lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I &lt;em&gt;love&lt;/em&gt; you BeautifulSoup.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;Then, I simply call the add the collection of directory items pointing
to the Youtube plugin.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;video_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scraper&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scrape_site&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;contents&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;video_list&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;xbmc_handler&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_video_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;url&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c"&gt;#...&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_video_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Collect just the ID from a Youtube ID, and use it to return an XBMC Directory Item&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="c"&gt;# The Youtube ID is the 4th value with array split&lt;/span&gt;
    &lt;span class="nb"&gt;id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="c"&gt;# URL to call the Youtube plugin&lt;/span&gt;
    &lt;span class="n"&gt;youtube_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;plugin://plugin.video.youtube?action=play_video&amp;amp;videoid=&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c"&gt;# Create a new XBMC List Item and provide the title&lt;/span&gt;
    &lt;span class="n"&gt;list_item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;xbmcgui&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ListItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;list_item&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setProperty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;IsPlayable&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;true&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;xbmcplugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addDirectoryItem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;__addon_id_int__&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;youtube_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;list_item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Installation and Support&lt;/h3&gt;
&lt;/p&gt;

&lt;p&gt;The plugin is not in the official repository just yet. I think, for it
to be worthy, I'll need to extend it to cover the wealth of video
content on the &lt;a href="http://www.thersa.org"&gt;RSA site&lt;/a&gt; beyond just the [Animate section][RSA
Animate]. But, it's simple to download and install via &lt;a href="https://github.com/lextoumbourou/plugin.video.rsa_animate"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;For support and discussion, please use the official &lt;a href="http://forum.xbmc.org/showthread.php?tid=128173"&gt;XBMC forum&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;</summary></entry><entry><title>Get the last day of every month in a range with Python</title><link href="http://lextoumbourou.github.io/blog/posts/get-the-last-day-of-every-month-in-a-range-with-python/" rel="alternate"></link><updated>2012-02-23T00:00:00+11:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2012-02-23:blog/posts/get-the-last-day-of-every-month-in-a-range-with-python/</id><summary type="html">&lt;/p&gt;

&lt;div class="intro"&gt;
I'm building an application that determines what your stock portfolio
was worth every month, factoring in brokerage costs and interest rates,
and compares it to the amount you paid for it (your cost basis). To do
this, I needed to write a method that iterates over a date range and
spits back the last day of each month, then builds a query based on
that.
&lt;/div&gt;

&lt;p&gt;I had a few rough ideas on how to go about it but most of them ending up
looking ugly enough to make Baby Jesus weep. People on Stack Overflow
had some ideas, most, of course, better than mine. However, I couldn't
find any that were easy to read and understand.&lt;/p&gt;
&lt;p&gt;So, the method I went with was an amalgamation of Vin-G's &lt;a href="http://stackoverflow.com/questions/4039879/best-way-to-find-the-months-between-two-dates-in-python"&gt;idea&lt;/a&gt; - who
I'm pretty sure makes his mother proud - and some stuff that came out of
reading up on Generators.&lt;/p&gt;
&lt;p&gt;It looks like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;months_in_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_date&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Get the last day of every month in a range between two datetime values.&lt;/span&gt;
&lt;span class="sd"&gt;    Return a generator&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;start_month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;
    &lt;span class="n"&gt;end_months&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;end_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;end_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_months&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c"&gt;# Get years in the date range, add it to the start date&amp;#39;s year&lt;/span&gt;
        &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;
        &lt;span class="n"&gt;month&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;

        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;month&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The method is called with two date time instances: a start and end date
and is then iterated when called. Like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;date&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;months_in_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2006&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;05&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()):&lt;/span&gt;
    &lt;span class="n"&gt;get_cost_basis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also used this code to do the same thing but a return a generator of
years:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;year_iterator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_date&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_date&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;31&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;a href="http://www.twitter.com/lexandstuff"&gt;Hooray!&lt;/a&gt;&lt;/p&gt;</summary><category term="Python"></category></entry><entry><title>Magic Ranker</title><link href="http://lextoumbourou.github.io/blog/posts/magic-ranker/" rel="alternate"></link><updated>2011-07-31T00:00:00+10:00</updated><author><name>Lex Toumbourou</name></author><id>tag:lextoumbourou.github.io,2011-07-31:blog/posts/magic-ranker/</id><summary type="html">&lt;h3&gt;Magic Formula&lt;/h3&gt;
&lt;p&gt;I finished reading Joel Greenblatt's &lt;a href="http://www.amazon.com/Little-Book-That-Beats-Market/dp/0471733067"&gt;The Little Book That Beats The
Market&lt;/a&gt; a while back and thought it was excellent. Basically, it's
value investing à la Warren Buffett, Benjamin Graham explained through
easy analogy. Joel does an amazing job of explaining a complex idea such
that a 12 year old could understand (or even me!). The premise, of
course, is to &lt;em&gt;buy great companies at bargain rates&lt;/em&gt;. Joel describes a
formula toward the end of the book that provides a strategy for listing
these companies and buying them annually. Finally, if that wasn't simple
enough for you (how simple do you need it exactly?), Joel runs a site
&lt;a href="MagicFormulaInvesting.com"&gt;MagicFormulaInvesting.com&lt;/a&gt; that lists these companies and even offers
a &lt;a href="http://http//www.formulainvesting.com/"&gt;fund&lt;/a&gt; that manages it all for you.&lt;/p&gt;
&lt;p&gt;This is awesome if you're in North America and investing in NASDAQ, but
not so if your house is upside down in Australia. Hence, &lt;a href="http://www.magicranker.com"&gt;MagicRanker&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Magic Ranker&lt;/h3&gt;
&lt;p&gt;[&lt;img alt="image" src="/images/magic_ranker_home.png" /&gt;]  &lt;/p&gt;
&lt;p&gt;MagicRanker, in brief, is what's in the book but for the ASX plus some
additives and artificial colours. It'd probably be easy to extend to
other markets around the world, if anyone is interested...we'll see. The
heart of it is a simple Python/Django app that scrapes Yahoo Finance and
E-trade for data, then ranks it nightly. Like so:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ranks the companies by ROE (Return On Equity) from highest to lowest
    (I eliminated those over 70% as I assumed some accounting trickery
    was going on there).&lt;/li&gt;
&lt;li&gt;Ranks the companies by Price to Earnings (P/E) lowest to highest.&lt;/li&gt;
&lt;li&gt;Adds those ranks together to get the total rank.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've added a couple of features like having the average ROE over a 5 /
10 year period, to get the most consistenly excellent companies (but of
course they're not necessarily the cheapist) and a debt percentage
filter. Feel free to ignore those options.&lt;/p&gt;
&lt;p&gt;Lastly, I automated the whole thing with a couple of cronjobs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Daily cron&lt;/strong&gt; scrapes the web for ROE, P/E and ranks the stocks.  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Weekly cron&lt;/strong&gt; scraps the ASX for new companies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monthly cron&lt;/strong&gt; get historical balance sheet data (since it's only
    updated twice a year).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The front end code uses &lt;a href="http://developer.yahoo.com/yui/"&gt;YUI&lt;/a&gt; for the nifty buttons and the
&lt;a href="http://blueprintcss.org/"&gt;Blueprint&lt;/a&gt; CSS framework for the grid.&lt;/p&gt;
&lt;h3&gt;Disclaimer (If you lose all your money, it's not my fault)&lt;/h3&gt;
&lt;p&gt;Keep in mind, I did this for fun and experimentation, not as a serious
financial tool. I'm not sure if I'll invest real money yet, might just
setup an E-trade watchlist and see how it goes. You should consider
doing that too.&lt;/p&gt;
&lt;p&gt;So, here it is: &lt;a href="http://MagicRanker.com"&gt;MagicRanker.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[&lt;img alt="image" src="/images/magic_ranker_home.png" /&gt;]: http://magicranker.com
  [&lt;img alt="image" src="/images/magic_ranker_example.png" /&gt;]: http://magicranker.com&lt;/p&gt;</summary><category term="Python"></category><category term="Django"></category></entry></feed>